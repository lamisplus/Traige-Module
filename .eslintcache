[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\api.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\Utils.js":"17"},{"size":716,"mtime":1712050876445,"results":"18","hashOfConfig":"19"},{"size":931,"mtime":1712050876406,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1712050878203,"results":"21","hashOfConfig":"19"},{"size":8947,"mtime":1712050878273,"results":"22","hashOfConfig":"19"},{"size":1302,"mtime":1712050915975,"results":"23","hashOfConfig":"19"},{"size":2012,"mtime":1712050916034,"results":"24","hashOfConfig":"19"},{"size":2920,"mtime":1712050878282,"results":"25","hashOfConfig":"19"},{"size":2348,"mtime":1712050916024,"results":"26","hashOfConfig":"19"},{"size":8712,"mtime":1716132792635,"results":"27","hashOfConfig":"19"},{"size":9452,"mtime":1716131898559,"results":"28","hashOfConfig":"19"},{"size":8859,"mtime":1712050916088,"results":"29","hashOfConfig":"19"},{"size":21741,"mtime":1712050916077,"results":"30","hashOfConfig":"19"},{"size":7710,"mtime":1712050916052,"results":"31","hashOfConfig":"19"},{"size":11929,"mtime":1712050916068,"results":"32","hashOfConfig":"19"},{"size":6786,"mtime":1712050916120,"results":"33","hashOfConfig":"19"},{"size":429,"mtime":1716133271380,"results":"34","hashOfConfig":"19"},{"size":2170,"mtime":1716131937009,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"i52t1d",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\index.js",["80"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["81","82"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\App.js",["83"],"import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\n\nimport Home from './main/webapp/jsx/components/Home'\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\n\n\nexport default function App() {\n  return (\n\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n         \n          <Route path=\"/patient-dashboard\">\n            <PatientDetail />\n          </Route>\n\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        \n          \n        </Switch>\n      </div>\n \n  );\n}\n\n\n\n\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["84","85","86"],"import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './PatientCard'\nimport { useHistory } from \"react-router-dom\";\n\nimport PatientVitalsHistory from './../PatientVitals/PatientVitalsHistory';\nimport PatientDashboardBody from \"./PatientDashboardBody\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [key, setKey] = useState('home');\n    const { classes } = props;\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\n    const [visitVitalExists, setVisitVitalExists] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Card >\n        <CardContent>\n          <PatientCardDetail patientObj={patientObj} visitVitalExists={visitVitalExists}/>\n          {/*<PatientVitalsHistory  patientObj={patientObj}/>*/}\n          <PatientDashboardBody patientObj={patientObj} setVisitVitalExists={setVisitVitalExists}/>\n         </CardContent>\n      </Card>\n      \n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js",["87","88"],"import React, { useState, Fragment } from \"react\";\nimport { Card, Col, Row, Tab, Tabs } from \"react-bootstrap\";\nimport CheckedInPatientList from \"../CheckedInPatients/CheckedInPatientsList\";\nimport PatientVitalsHistory from \"../PatientVitals/PatientVitalsHistory\";\nimport CurrentVitals from \"../PatientVitals/CurrentVitals\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\nfunction PatientDashboardBody(props) {\n  const [key, setKey] = useState(\"vitals-history\");\n  const [patientObj, setpatientObj] = useState(props.patientObj);\n  const [patientList, setPatientList] = useState([]);\n  const [currentVitals, setCurrentVitals] = useState({});\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"vitals-history\" title=\"History\">\n                    <PatientVitalsHistory\n                      patientObj={patientObj}\n                      patientList={patientList}\n                      setPatientList={setPatientList}\n                      setKey={setKey}\n                      setCurrentVitals={setCurrentVitals}\n                      currentVitals={currentVitals}\n                    />\n                  </Tab>\n                  <Tab eventKey=\"current-Vitals\" title=\"Capture Vitals\">\n                    <CurrentVitals\n                      patientObj={patientObj}\n                      setVisitVitalExists={props.setVisitVitalExists}\n                      setKey={setKey}\n                      setPatientList={setPatientList}\n                      currentVitals={currentVitals}\n                    />\n                  </Tab>\n                  {/*<Tab eventKey=\"vitals-charts\" title=\"Charts\">\n                                        <CurrentVitals patientObj={patientObj} setVisitVitalExists={props.setVisitVitalExists}/>\n                                    </Tab>*/}\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n}\n\nexport default PatientDashboardBody;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"../../../../../api\";\nimport Swal from \"sweetalert2\";\n\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Card, CardBody } from \"reactstrap\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  MdDashboard,\n  MdPerson,\n  MdRemoveRedEye,\n  MdDelete,\n  MdEditNote,\n} from \"react-icons/md\";\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport moment from \"moment\";\nimport ButtonMui from \"@material-ui/core/Button\";\nimport AddVitals from \"./AddVitals\";\nimport SplitActionButton from \"../../layouts/SplitActionButton\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst Patients = (props) => {\n  console.log(\"History\" + props);\n  //const [patientList, setPatientList] = useState([])\n  const [patientObj, setpatientObj] = useState(props.patientObj);\n  const [modal, setModal] = useState(false);\n  const [permissions, setPermissions] = useState([]);\n  const toggle = () => setModal(!modal);\n\n  useEffect(() => {\n    userPermission();\n    patientsVitalsSigns();\n  }, []);\n\n  const userPermission = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPermissions(response.data.permissions);\n      })\n      .catch((error) => {});\n  };\n  ///GET LIST OF Patients\n  async function patientsVitalsSigns() {\n    axios\n      .get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        props.setPatientList(response.data);\n      })\n      .catch((error) => {});\n  }\n  const AddVitalsSigns = (row) => {\n    setpatientObj({ ...patientObj, ...row });\n    setModal(!modal);\n  };\n\n  const handleDelete = (id) => {\n    //console.log(\"delete\", id)\n    axios\n      .delete(`${baseUrl}patient/vital-sign/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        patientsVitalsSigns();\n        Swal.fire({\n          icon: \"success\",\n          text: \"Vital Sign Deleted Successfully\",\n          timer: 1500,\n        });\n      })\n      .catch((error) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"An error occurred while deleting!!!\",\n        });\n      });\n  };\n\n  const edit = (row) => {\n    console.log(\"edit item\", row);\n    props.setCurrentVitals(row);\n    props.setKey(\"current-Vitals\");\n  };\n\n  function actionItems(row) {\n    return [\n      {\n        type: \"single\",\n        actions: [\n          {\n            name: \"Delete\",\n            type: \"link\",\n            icon: <MdEditNote size=\"22\" />,\n            editAction: () => {\n              edit(row);\n            },\n            deleteAction: () => {\n              handleDelete(row.id);\n            },\n            to: {\n              pathname: \"\",\n              state: {},\n            },\n          },\n        ],\n      },\n    ];\n  }\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"\"\n        columns={[\n          {\n            title: \"Capture Date\",\n            field: \"date\",\n            headerStyle: {\n              backgroundColor: \"#039be5\",\n              border: \"2px solid #fff\",\n              paddingRight: \"30px\",\n            },\n          },\n          { title: \"Pulse\", field: \"pulse\", filtering: false },\n          {\n            title: \"Respiratory Rate\",\n            field: \"respiratoryRate\",\n            filtering: false,\n          },\n          { title: \"Blood Presure\", field: \"bloodPresure\", filtering: false },\n          {\n            title: <p>Temperature &#8451;</p>,\n            field: \"temperature\",\n            filtering: false,\n          },\n          { title: \"Height(cm)\", field: \"Height\", filtering: false },\n          { title: \"Weight(kg)\", field: \"Weight\", filtering: false },\n          { title: \"BMI\", field: \"BMI\", filtering: false },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            headerStyle: {\n              backgroundColor: \"#992E62\",\n              border: \"2px solid #fff\",\n              paddingRight: \"30px\",\n            },\n          },\n        ]}\n        data={props.patientList.map((row) => ({\n          //Id: manager.id,\n          date: moment(row.captureDate).format(\"YYYY-MM-DD h:mm a\"),\n          pulse: row.pulse,\n          respiratoryRate: row.respiratoryRate,\n          temperature: <p>{row.temperature}&#8451;</p>,\n          bloodPresure:\n            row.systolic !== null ? row.systolic + \" /\" + row.diastolic : \"\",\n          Height: row.height !== null ? row.height + \" cm\" : \"\",\n          Weight: row.bodyWeight !== null ? row.bodyWeight + \" kg\" : \"\",\n          BMI: Math.round(row.bodyWeight / Math.pow(row.height / 100, 2)),\n          actions: (\n            <div>\n              {permissions.includes(\"edit_vitals\") ||\n              permissions.includes(\"all_permission\") ? (\n                <SplitActionButton actions={actionItems(row)} />\n              ) : (\n                \"\"\n              )}\n            </div>\n          ),\n        }))}\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n            fontSize: \"14px\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: false,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n      />\n      <AddVitals\n        toggle={toggle}\n        showModal={modal}\n        patientObj={patientObj}\n        patientsVitalsSigns={patientsVitalsSigns}\n      />\n    </div>\n  );\n};\n\nexport default Patients;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Label,\n  Spinner,\n} from \"reactstrap\";\nimport MatButton from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { token, url as baseUrl } from \"../../../../../api\";\nimport { toast } from \"react-toastify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    \"& .input-group-text\": {\n      fontSize: \"0.75rem\",\n    },\n  },\n  input: {\n    border: \"2px solid #014d88\",\n    borderRadius: \"0px\",\n    fontSize: \"16px\",\n    color: \"#000\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n  inputGroupText: {\n    backgroundColor: \"#014d88\",\n    fontWeight: \"bolder\",\n    color: \"#fff\",\n    borderRadius: \"0px\",\n  },\n  label: {\n    fontSize: \"1.1rem\",\n    color: \"rgb(153, 46, 98)\",\n    fontWeight: \"600\",\n  },\n}));\n\nfunction CurrentVitals(props) {\n  const patientObj = props.patientObj;\n  const [permissions, setPermissions] = useState([]);\n  let history = useHistory();\n  const classes = useStyles();\n  //const [values, setValues] = useState([]);\n  const [currentVitals, setCurrentVitals] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [bmi, setBMI] = useState(0);\n  const [visitVitalStatus, setVisitVitalStatus] = useState(false);\n  const [visitStartDate, setVisitStartDate] = useState(\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\n  );\n  const [currentVitalId, setCurrentVitalId] = useState(null);\n  const [today, setToday] = useState(moment().format(\"YYYY-MM-DDTHH:mm\"));\n\n  //console.log(\"current \" + props.currentVitals.id);\n\n  const [vital, setVitalSignDto] = useState({\n    bodyWeight: \"\",\n    diastolic: \"\",\n    captureDate: moment().format(\"YYYY-MM-DDTHH:mm\"),\n    height: \"\",\n    personId: props.patientObj.id,\n    pulse: \"\",\n    respiratoryRate: \"\",\n    systolic: \"\",\n    temperature: \"\",\n    visitId: props.patientObj.visitId,\n  });\n\n  const handleInputChangeVitalSignDto = (e) => {\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\n    if (e.target.name == \"bodyWeight\" || e.target.name == \"height\") {\n      let height = e.target.name == \"height\" ? e.target.value : vital.height;\n      let weight =\n        e.target.name == \"bodyWeight\" ? e.target.value : vital.bodyWeight;\n      setBMI(Math.round(weight / Math.pow(height / 100, 2)));\n    }\n  };\n  //FORM VALIDATION\n  const validate = () => {\n    let temp = { ...errors };\n    //temp.name = details.name ? \"\" : \"This field is required\"\n    //temp.description = details.description ? \"\" : \"This field is required\"\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n\n  async function patientsVitalsSigns() {\n    axios\n      .get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        props.setPatientList(response.data);\n      })\n      .catch((error) => {});\n  }\n\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //If visit has a vital sign update else create new\n    if (visitVitalStatus) {\n      setSaving(true);\n\n      vital.captureDate = moment(vital.captureDate, \"YYYY-MM-DDTHH:mm\").format(\n        \"yyyy-MM-DD HH:mm\"\n      );\n\n      axios\n        .put(`${baseUrl}patient/vital-sign/${currentVitalId}`, vital, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.patientObj.commenced = true;\n          toast.success(\"Vital signs updated successfully\");\n          console.log(\"done\");\n          //props.toggle()\n          //props.patientsVitalsSigns()\n          patientsVitalsSigns();\n          props.setKey(\"vitals-history\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          toast.error(\"Something went wrong\");\n        });\n    } else {\n      setSaving(true);\n      vital.captureDate = moment(vital.captureDate, \"YYYY-MM-DDTHH:mm\").format(\n        \"yyyy-MM-DD HH:mm\"\n      );\n      axios\n        .post(`${baseUrl}patient/vital-sign/`, vital, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setSaving(false);\n          props.patientObj.commenced = true;\n          toast.success(\"Vital signs saved successful\");\n          //props.toggle()\n          // props.patientsVitalsSigns()\n\n          props.setVisitVitalExists(true);\n          patientsVitalsSigns();\n          props.setKey(\"vitals-history\");\n        })\n        .catch((error) => {\n          setSaving(false);\n          toast.error(\"Something went wrong\");\n        });\n    }\n  };\n  const userPermission = () => {\n    axios\n      .get(`${baseUrl}account`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPermissions(response.data.permissions);\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    patientsVitalsSigns();\n    getLatestVitals();\n  }, []);\n  ///GET LIST OF Patients\n  async function getLatestVitals() {\n    axios\n      .get(\n        `${baseUrl}patient/visit/${\n          props.currentVitals?.visitId || props.patientObj.visitId\n        }`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        setVisitStartDate(\n          new Date(response.data.checkInDate)\n            .toISOString()\n            .substr(0, 10)\n            .replace(\"T\", \" \")\n        );\n      });\n    axios\n      .get(\n        `${baseUrl}patient/vital-sign/visit/${\n          props.currentVitals?.visitId || props.patientObj.visitId\n        }`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      )\n      .then((response) => {\n        setVitalSignDto(response.data);\n        setBMI(\n          Math.round(\n            response.data.bodyWeight / Math.pow(response.data.height / 100, 2)\n          )\n        );\n        setVisitVitalStatus(true);\n        setCurrentVitalId(response.data.id);\n        vital.captureDate = moment(response.data.captureDate).format(\n          \"YYYY-MM-DDTHH:mm\"\n        );\n\n        props.setVisitVitalExists(true);\n      })\n      .catch((error) => {});\n    /*        axios.get(`${baseUrl}patient/visit/visit-by-patient/${props.patientObj.visitId}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n            ).then((response)=>{\n                console.log(\"response.data\")\n                console.log(response.data)\n                console.log(\"response.data\")\n        })*/\n  }\n  const numberOnly = (e, inputName) => {\n    const result = e.target.value.replace(/[^0-9]/gi, \"\");\n  };\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Date Of Vital Sign *</Label>\n                  <InputGroup>\n                    <Input\n                      type=\"datetime-local\"\n                      name=\"captureDate\"\n                      id=\"captureDate\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.captureDate}\n                      className={classes.input}\n                      max={today}\n                      min={moment(visitStartDate).format(\"YYYY-MM-DDTHH:mm\")}\n                      required\n                    />\n                  </InputGroup>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Pulse *</Label>\n                  <InputGroup>\n                    <InputGroupText className={classes.inputGroupText}>\n                      bmp\n                    </InputGroupText>\n                    <Input\n                      type=\"text\"\n                      name=\"pulse\"\n                      id=\"pulse\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.pulse}\n                      className={classes.input}\n                      required={true}\n                      onInput={(e) => {\n                        e.target.value = e.target.value.replace(/\\D/g, \"\");\n                      }}\n                    />\n                  </InputGroup>\n                  {vital.pulse > 150 || vital.pulse < 40 ? (\n                    <span className={classes.error}>\n                      {\"Pulse must not be greater than 150 and less than 40\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Respiratory Rate *</Label>\n                  <InputGroup>\n                    <InputGroupText className={classes.inputGroupText}>\n                      bpm\n                    </InputGroupText>\n                    <Input\n                      type=\"number\"\n                      name=\"respiratoryRate\"\n                      id=\"respiratoryRate\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.respiratoryRate}\n                      className={classes.input}\n                      onInput={(e) => {\n                        e.target.value = e.target.value.replace(/\\D/g, \"\");\n                      }}\n                    />\n                  </InputGroup>\n                  {vital.respiratoryRate > 40 || vital.respiratoryRate < 10 ? (\n                    <span className={classes.error}>\n                      {\n                        \"Respiratory Rate must not be greater than 40 and less than 10\"\n                      }\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Temperature *</Label>\n                  <InputGroup>\n                    <InputGroupText className={classes.inputGroupText}>\n                      <sup>o</sup>C\n                    </InputGroupText>\n                    <Input\n                      type=\"text\"\n                      name=\"temperature\"\n                      id=\"temperature\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.temperature}\n                      className={classes.input}\n                      onInput={(e) => {\n                        e.target.value = e.target.value.replace(/\\D/g, \"\");\n                      }}\n                    />\n                  </InputGroup>\n                  {vital.temperature > 47 || vital.temperature < 35 ? (\n                    <span className={classes.error}>\n                      {\n                        \"Temperature must not be greater than 47 and less than 35\"\n                      }\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <InputGroup>\n                    <div\n                      style={{\n                        width: \"30%\",\n                        display: \"flex\",\n                        alignContent: \"flex-start\",\n                        alignItems: \"center\",\n                        paddingRight: \"10px\",\n                      }}\n                    >\n                      <Label className={classes.label}>Blood Pressure *</Label>\n                    </div>\n                    <div style={{ width: \"35%\" }}>\n                      <InputGroupText className={classes.inputGroupText}>\n                        systolic(mmHg)\n                      </InputGroupText>\n                      <Input\n                        type=\"text\"\n                        name=\"systolic\"\n                        id=\"systolic\"\n                        onChange={handleInputChangeVitalSignDto}\n                        value={vital.systolic}\n                        className={classes.input}\n                        onInput={(e) => {\n                          e.target.value = e.target.value.replace(/\\D/g, \"\");\n                        }}\n                      />\n                      {vital.systolic > 200 ? (\n                        <span className={classes.error}>\n                          {\"systolic cannot be greater than 200\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                      {vital.systolic < 60 ? (\n                        <span className={classes.error}>\n                          {\"systolic cannot be less than 60\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    <div style={{ width: \"35%\" }}>\n                      <InputGroupText\n                        className={classes.inputGroupText}\n                        style={{ backgroundColor: \"#992E62\" }}\n                      >\n                        diastolic (mmHg)\n                      </InputGroupText>\n                      <Input\n                        type=\"text\"\n                        name=\"diastolic\"\n                        id=\"diastolic\"\n                        onChange={handleInputChangeVitalSignDto}\n                        value={vital.diastolic}\n                        className={classes.input}\n                        style={{ border: \"2px solid #992E62\" }}\n                        onInput={(e) => {\n                          e.target.value = e.target.value.replace(/\\D/g, \"\");\n                        }}\n                      />\n                      {vital.diastolic > 200 ? (\n                        <span className={classes.error}>\n                          {\"diastolic cannot be greater than 200\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                      {vital.diastolic < 60 ? (\n                        <span className={classes.error}>\n                          {\"diastolic cannot be less than 60\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </InputGroup>\n                </FormGroup>\n              </div>\n              {/*                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label className={classes.label}>Blood Pressure *</Label>\n\n                                    <InputGroup>\n                                        <InputGroupText className={classes.inputGroupText}>\n                                            diastolic (mmHg)\n                                        </InputGroupText>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"diastolic\"\n                                            id=\"diastolic\"\n                                            onChange={handleInputChangeVitalSignDto}\n                                            value={vital.diastolic}\n                                            className={classes.input}\n                                        />\n\n                                    </InputGroup>\n                                    {vital.diastolic > 200 ? (\n                                        <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>*/}\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Body Weight *</Label>\n                  <InputGroup>\n                    <InputGroupText className={classes.inputGroupText}>\n                      kg\n                    </InputGroupText>\n                    <Input\n                      type=\"text\"\n                      name=\"bodyWeight\"\n                      id=\"bodyWeight\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.bodyWeight}\n                      className={classes.input}\n                      onInput={(e) => {\n                        e.target.value = e.target.value.replace(/\\D/g, \"\");\n                      }}\n                    />\n                  </InputGroup>\n                  {vital.bodyWeight > 200 ? (\n                    <span className={classes.error}>\n                      {\"Body Weight cannot be greater than 200.\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-3\">\n                <FormGroup>\n                  <Label className={classes.label}>Height *</Label>\n                  <InputGroup>\n                    <InputGroupText className={classes.inputGroupText}>\n                      cm\n                    </InputGroupText>\n                    <Input\n                      type=\"text\"\n                      name=\"height\"\n                      id=\"height\"\n                      onChange={handleInputChangeVitalSignDto}\n                      value={vital.height}\n                      className={classes.input}\n                      onInput={(e) => {\n                        e.target.value = e.target.value.replace(/\\D/g, \"\");\n                      }}\n                    />\n                    <InputGroupText\n                      className={classes.inputGroupText}\n                      style={{ backgroundColor: \"#992E62\", color: \"#fff\" }}\n                    >\n                      {vital.height / 100} M\n                    </InputGroupText>\n                  </InputGroup>\n\n                  {vital.height > 300 ? (\n                    <span className={classes.error}>\n                      {\"Height cannot be greater than 300.\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-2\">\n                <div\n                  style={{\n                    marginTop: \"5px\",\n                    display: \"flex\",\n                    alignContent: \"flex-start\",\n                    alignItems: \"center\",\n                    height: \"100%\",\n                    backgroundColor: \"#fff\",\n                    color: \"#014d88 \",\n                    fontSize: \"16px\",\n                    padding: \"15px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  <h3 style={{ color: \"#014d88\", fontSize: \"1.2rem\" }}>\n                    BMI : <span style={{ color: \"#992E62\" }}>{bmi}</span>{\" \"}\n                  </h3>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\"></div>\n            {saving ? <Spinner /> : \"\"}\n            <br />\n\n            <MatButton\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<SaveIcon />}\n              onClick={handleSubmit}\n              //style={{backgroundColor:\"#014d88\", color:'#fff'}}\n              style={{\n                backgroundColor: `${visitVitalStatus ? \"green\" : \"#014d88\"}`,\n                color: \"#fff\",\n              }}\n            >\n              {!saving ? (\n                <span style={{ textTransform: \"capitalize\" }}>\n                  {visitVitalStatus ? \"Update\" : \"Save\"}\n                </span>\n              ) : (\n                <span style={{ textTransform: \"capitalize\" }}>\n                  {visitVitalStatus ? \"Updating...\" : \"Saving...\"}\n                </span>\n              )}\n            </MatButton>\n            <Link to={\"/\"}>\n              <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                style={{ backgroundColor: \"rgb(153, 46, 98)\", color: \"#fff\" }}\n              >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n              </MatButton>\n            </Link>\n\n            {/*\n                        {\" \"}<Button  floated='right'  style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\n*/}\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default CurrentVitals;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js",["147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport {format} from 'date-fns';\nimport 'react-summernote/dist/react-summernote.css'; // import styles\nimport { Spinner } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DualListBox from \"react-dual-listbox\";\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport _ from 'lodash';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    }, \n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\nlet newDate = new Date()\n\nconst AddVitals = (props) => {\n    const patientObj = props.patientObj;\n    //console.log(patientObj)\n    const [selectedOption, setSelectedOption] = useState([]);\n    let history = useHistory();\n    const classes = useStyles()\n    const [services, setServices]= useState([]);\n    //const [values, setValues] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        ServicesPost()\n      }, []);\n        ///GET LIST OF Post Services\n        async function ServicesPost() {\n            axios\n                .get(`${baseUrl}patient/vital-sign/post-service`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    setServices(\n                        Object.entries(response.data).map(([key, value]) => ({\n                          label: value.moduleServiceName,\n                          value: value.moduleServiceCode,\n                        })))\n                 \n                })\n                .catch((error) => {    \n                });\n            axios.get(`${baseUrl}patient/encounter/visit/${patientObj.visitId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}})\n                .then(response =>{\n                    setSelectedOption(_.uniq(_.map(response.data,'serviceCode')));\n                })\n        }\n    const createdAt = new Date();\n\n    const [postServices, setPostServices]= useState({\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\n                                                        personId:\"\",\n                                                        serviceCode:\"\",\n                                                        visitId: \"\"\n                                                    })\n    \n\n        /**** Submit Button Processing  */\n        const handleSubmit = (e) => {        \n            e.preventDefault();\n            if(selectedOption.length > 0){\n                setSaving(true);\n                let serviceArr = []\n                selectedOption.forEach(function (value, index, array) {\n                    serviceArr.push(value)\n                })\n                postServices.personId=patientObj.id\n                postServices.visitId=patientObj.visitId\n                postServices.serviceCode=serviceArr\n                axios.post(`${baseUrl}patient/post`, postServices,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n\n                )\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.commenced=true\n                        toast.success(\"Vital signs save successful\");\n                        props.toggle()\n                        //props.patientsVitalsSigns()\n\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        toast.error(\"Something went wrong\");\n\n                    });\n            }else{\n                toast.error(\"Kindly select a service to post the patient\");\n            }\n\n          \n        }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#fff\"}}>\n                 <Label for=\"post-services\" style={{backgroundColor:\"#fff\",color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Post Patient</h5></Label>\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n                </Modal.Header>\n                <Modal.Body>                   \n                        <Card >\n                            <CardBody>\n                            <form >\n                                <div className=\"row\">\n                                    <DualListBox\n                                        options={services}\n                                        onChange={setSelectedOption}\n                                        selected={selectedOption}\n                                    />\n{/*\n                                   <Select\n                                        onChange={setSelectedOption}\n                                        value={selectedOption}\n                                        options={services}\n                                        isMulti=\"true\"\n                                        noOptionsMessage=\"true\"\n                                    />\n*/}\n\n                                </div>\n                                \n                                {saving ? <Spinner /> : \"\"}\n                                <br />\n                            \n                                <MatButton\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    startIcon={<SaveIcon />}\n                                    onClick={handleSubmit}\n                                    style={{backgroundColor:'#014d88'}}\n                                    >\n                                    {!saving ? (\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                                    ) : (\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                                    )}\n                                </MatButton>\n                          \n                            </form>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n      </Modal>\n    </div>\n  );\n}\n\nexport default AddVitals;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js",["160","161","162","163","164","165","166","167"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupText,\n} from \"reactstrap\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport \"react-summernote/dist/react-summernote.css\"; // import styles\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst AddVitals = (props) => {\n  const patientObj = props.patientObj;\n  //console.log(patientObj);\n  let history = useHistory();\n  const classes = useStyles();\n  //const [values, setValues] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [today, setToday] = useState(\n    new Date().toISOString().substr(0, 10).replace(\"T\", \" \")\n  );\n  const [vital, setVitalSignDto] = useState({\n    bodyWeight: \"\",\n    diastolic: \"\",\n    encounterDate: \"\",\n    height: \"\",\n    personId: props.patientObj.id,\n    pulse: \"\",\n    respiratoryRate: \"\",\n    systolic: \"\",\n    temperature: \"\",\n    visitId: props.patientObj.visitId,\n  });\n\n  const handleInputChangeVitalSignDto = (e) => {\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\n  };\n\n  //console.log(vital)\n  //FORM VALIDATION\n  const validate = () => {\n    let temp = { ...errors };\n    //temp.name = details.name ? \"\" : \"This field is required\"\n    //temp.description = details.description ? \"\" : \"This field is required\"\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setSaving(true);\n    axios\n      .post(`${baseUrl}patient/vital-sign/`, vital, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSaving(false);\n        props.patientObj.commenced = true;\n        toast.success(\"Vital signs save successful\");\n        props.toggle();\n        props.patientsVitalsSigns();\n      })\n      .catch((error) => {\n        setSaving(false);\n        toast.error(\"Something went wrong\");\n      });\n  };\n\n  return (\n    <div>\n      <Modal\n        show={props.showModal}\n        toggle={props.toggle}\n        className=\"fade\"\n        size=\"lg\"\n      >\n        <Modal.Header\n          toggle={props.toggle}\n          style={{ backgroundColor: \"#eeeeee\" }}\n        >\n          Vital Signs\n          <Button\n            variant=\"\"\n            className=\"btn-close\"\n            onClick={props.toggle}\n          ></Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Card>\n            <CardBody>\n              <form>\n                <div className=\"row\">\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Date Of Vital Signsss</Label>\n                      <InputGroup>\n                        <Input\n                          type=\"date\"\n                          name=\"encounterDate\"\n                          id=\"encounterDate\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.encounterDate}\n                          max={today}\n                        />\n                      </InputGroup>\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Pulse</Label>\n                      <InputGroup>\n                        <InputGroupText>bmp</InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"pulse\"\n                          id=\"pulse\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.pulse}\n                        />\n                      </InputGroup>\n                      {vital.pulse > 200 ? (\n                        <span className={classes.error}>\n                          {\"Body Weight cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Respiratory Rate</Label>\n                      <InputGroup>\n                        <InputGroupText>bpm</InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"respiratoryRate\"\n                          id=\"respiratoryRate\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.respiratoryRate}\n                        />\n                      </InputGroup>\n                      {vital.respiratoryRate > 200 ? (\n                        <span className={classes.error}>\n                          {\"Body Weight cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Temperature</Label>\n                      <InputGroup>\n                        <InputGroupText>\n                          <sup>o</sup>C\n                        </InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"temperature\"\n                          id=\"temperature\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.temperature}\n                        />\n                      </InputGroup>\n                      {vital.temperature > 200 ? (\n                        <span className={classes.error}>\n                          {\"Body Weight cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Blood Presure</Label>\n                      <InputGroup>\n                        <InputGroupText>systolic(mmHg)</InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"systolic\"\n                          id=\"systolic\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.systolic}\n                        />\n                      </InputGroup>\n                      {vital.systolic > 200 ? (\n                        <span className={classes.error}>\n                          {\"Blood Pressure cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Blood Presure</Label>\n\n                      <InputGroup>\n                        <InputGroupText>diastolic (mmHg)</InputGroupText>\n                        <Input\n                          type=\"text\"\n                          name=\"diastolic\"\n                          id=\"diastolic\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.diastolic}\n                        />\n                      </InputGroup>\n                      {vital.diastolic > 200 ? (\n                        <span className={classes.error}>\n                          {\"Blood Pressure cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Body Weight</Label>\n                      <InputGroup>\n                        <InputGroupText>kg</InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"bodyWeight\"\n                          id=\"bodyWeight\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.bodyWeight}\n                        />\n                      </InputGroup>\n                      {vital.bodyWeight > 200 ? (\n                        <span className={classes.error}>\n                          {\"Body Weight cannot be greater than 200.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-6\">\n                    <FormGroup>\n                      <Label>Height</Label>\n                      <InputGroup>\n                        <InputGroupText>m</InputGroupText>\n                        <Input\n                          type=\"number\"\n                          name=\"height\"\n                          id=\"height\"\n                          onChange={handleInputChangeVitalSignDto}\n                          value={vital.height}\n                        />\n                      </InputGroup>\n                      {vital.height > 3 ? (\n                        <span className={classes.error}>\n                          {\"Height cannot be greater than 3.\"}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </div>\n\n                {saving ? <Spinner /> : \"\"}\n                <br />\n\n                <MatButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  onClick={handleSubmit}\n                >\n                  {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                  ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Saving...\n                    </span>\n                  )}\n                </MatButton>\n\n                <MatButton\n                  variant=\"contained\"\n                  className={classes.button}\n                  startIcon={<CancelIcon />}\n                >\n                  <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n                </MatButton>\n              </form>\n            </CardBody>\n          </Card>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddVitals;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js",["168","169","170","171"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport Typography from '@mui/material/Typography';\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\nimport Divider from '@mui/material/Divider';\nimport {useRef} from \"react\";\nimport { Link } from 'react-router-dom'\nimport {TiArrowForward} from \"react-icons/ti\";\nimport {MdDashboard} from \"react-icons/md\";\n\nexport default function SplitActionButton(props) {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = useRef(null);\n\n    const handleClick = () => {\n        console.info(`You clicked`);\n        console.info(props.actions[0].actions[0].to);\n        console.info(`You clicked`);\n    };\n\n    const handleMenuItemClick = () => {\n        setOpen(false);\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <ButtonGroup  variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:`${ props.actions[0].type === 'single' ?'auto':'150px'}`}} >\n\n\n                {props.actions[0].type === 'single'&&\n                    <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\n                        <ButtonGroup variant=\"contained\"\n                                     aria-label=\"split button\"\n                                     style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'100%',borderColor:'#fff'}}\n                                     size=\"large\"\n                        >\n                            <Button\n                                //color=\"primary\"\n                                size=\"small\"\n//                                aria-label=\"select merge strategy\"\n//                                aria-haspopup=\"menu\"\n                                style={{backgroundColor:'rgb(153, 46, 98)',borderColor:'#fff'}}\n                                onClick={props.actions[0].actions[0].editAction}\n                            >\n                                {props.actions[0].actions[0].icon}\n                            </Button>\n                            <Button\n                                style={{backgroundColor:'rgb(153, 46, 98)',borderColor:'#fff'}}\n                                onClick={props.actions[0].actions[0].deleteAction}\n                            >\n                                <span style={{fontSize:'0.85em', color:'#fff', fontWeight:'bolder',borderColor:'#fff'}}>{props.actions[0].actions[0].name}</span>\n                            </Button>\n\n                        </ButtonGroup>\n                    </Link>\n                }\n                {props.actions[0].type === 'multiple'&&\n                    <>\n                        <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\n                            <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\n                                <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].actions[0].name}</Typography>\n                            </Button>\n                        </Link>\n                        <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\n                            1\n                        </Divider>\n                        <Button\n                            size=\"medium\"\n                            aria-controls={open ? 'split-button-menu' : undefined}\n                            aria-expanded={open ? 'true' : undefined}\n                            aria-label=\"select merge strategy\"\n                            aria-haspopup=\"menu\"\n                            onClick={handleToggle}\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\n                        >\n                            <FaCaretDown size='24' />\n                        </Button>\n                    </>\n                }\n\n            </ButtonGroup>\n            {props.actions[0].type === 'multiple'&&\n                <>\n                    <Popper\n                        open={open}\n                        anchorEl={anchorRef.current}\n                        role={undefined}\n                        transition\n                        disablePortal\n                        style={{ zIndex:'10000' }}\n                    >\n                        {({ TransitionProps, placement }) => (\n                            <Grow\n                                {...TransitionProps}\n                                style={{\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                                    zIndex:'1000'\n                                }}\n                            >\n                                width: 130,\n                                <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\n                                    <ClickAwayListener onClickAway={handleClose}>\n                                        <MenuList id=\"split-button-menu\" autoFocusItem>\n                                            {props.actions[0].actions.slice(1).map((option, index) => (\n                                                <MenuItem\n                                                    key={Math.random()}\n                                                >\n                                                    <Link\n                                                        to={option.to}\n                                                    >\n                                                        {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\n                                                    </Link>\n\n                                                </MenuItem>\n                                            ))}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </>\n            }\n\n\n        </React.Fragment>\n    );\n}\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\Triage-Module-march-review-update\\src\\main\\webapp\\jsx\\Utils.js",["172","173"],{"ruleId":"174","severity":1,"message":"175","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":23},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"174","severity":1,"message":"182","line":3,"column":19,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"174","severity":1,"message":"183","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":28},{"ruleId":"174","severity":1,"message":"184","line":52,"column":12,"nodeType":"176","messageId":"177","endLine":52,"endColumn":15},{"ruleId":"174","severity":1,"message":"185","line":52,"column":17,"nodeType":"176","messageId":"177","endLine":52,"endColumn":23},{"ruleId":"174","severity":1,"message":"186","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":28},{"ruleId":"174","severity":1,"message":"187","line":13,"column":22,"nodeType":"176","messageId":"177","endLine":13,"endColumn":35},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"189","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":18},{"ruleId":"174","severity":1,"message":"190","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":29},{"ruleId":"174","severity":1,"message":"191","line":14,"column":8,"nodeType":"176","messageId":"177","endLine":14,"endColumn":14},{"ruleId":"174","severity":1,"message":"192","line":15,"column":8,"nodeType":"176","messageId":"177","endLine":15,"endColumn":14},{"ruleId":"174","severity":1,"message":"193","line":18,"column":8,"nodeType":"176","messageId":"177","endLine":18,"endColumn":17},{"ruleId":"174","severity":1,"message":"194","line":88,"column":9,"nodeType":"176","messageId":"177","endLine":88,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":98,"column":25,"nodeType":"197","messageId":"198","endLine":98,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":105,"column":25,"nodeType":"197","messageId":"198","endLine":105,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":137,"column":62,"nodeType":"197","messageId":"201","endLine":137,"endColumn":63},{"ruleId":"174","severity":1,"message":"202","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":15},{"ruleId":"174","severity":1,"message":"203","line":5,"column":17,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"174","severity":1,"message":"204","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},{"ruleId":"174","severity":1,"message":"205","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":18},{"ruleId":"174","severity":1,"message":"206","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":13},{"ruleId":"174","severity":1,"message":"207","line":14,"column":10,"nodeType":"176","messageId":"177","endLine":14,"endColumn":14},{"ruleId":"174","severity":1,"message":"208","line":34,"column":10,"nodeType":"176","messageId":"177","endLine":34,"endColumn":14},{"ruleId":"174","severity":1,"message":"209","line":34,"column":16,"nodeType":"176","messageId":"177","endLine":34,"endColumn":24},{"ruleId":"174","severity":1,"message":"210","line":34,"column":26,"nodeType":"176","messageId":"177","endLine":34,"endColumn":36},{"ruleId":"174","severity":1,"message":"211","line":34,"column":38,"nodeType":"176","messageId":"177","endLine":34,"endColumn":46},{"ruleId":"174","severity":1,"message":"212","line":36,"column":10,"nodeType":"176","messageId":"177","endLine":36,"endColumn":15},{"ruleId":"174","severity":1,"message":"213","line":65,"column":7,"nodeType":"176","messageId":"177","endLine":65,"endColumn":16},{"ruleId":"174","severity":1,"message":"214","line":110,"column":10,"nodeType":"176","messageId":"177","endLine":110,"endColumn":20},{"ruleId":"174","severity":1,"message":"187","line":110,"column":22,"nodeType":"176","messageId":"177","endLine":110,"endColumn":35},{"ruleId":"195","severity":1,"message":"196","line":160,"column":25,"nodeType":"197","messageId":"198","endLine":160,"endColumn":27},{"ruleId":"174","severity":1,"message":"207","line":9,"column":10,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},{"ruleId":"174","severity":1,"message":"215","line":25,"column":10,"nodeType":"176","messageId":"177","endLine":25,"endColumn":14},{"ruleId":"174","severity":1,"message":"216","line":25,"column":16,"nodeType":"176","messageId":"177","endLine":25,"endColumn":24},{"ruleId":"174","severity":1,"message":"204","line":30,"column":3,"nodeType":"176","messageId":"177","endLine":30,"endColumn":14},{"ruleId":"174","severity":1,"message":"217","line":31,"column":3,"nodeType":"176","messageId":"177","endLine":31,"endColumn":11},{"ruleId":"174","severity":1,"message":"218","line":32,"column":3,"nodeType":"176","messageId":"177","endLine":32,"endColumn":17},{"ruleId":"174","severity":1,"message":"219","line":33,"column":3,"nodeType":"176","messageId":"177","endLine":33,"endColumn":11},{"ruleId":"174","severity":1,"message":"208","line":36,"column":10,"nodeType":"176","messageId":"177","endLine":36,"endColumn":14},{"ruleId":"174","severity":1,"message":"209","line":36,"column":16,"nodeType":"176","messageId":"177","endLine":36,"endColumn":24},{"ruleId":"174","severity":1,"message":"210","line":36,"column":26,"nodeType":"176","messageId":"177","endLine":36,"endColumn":36},{"ruleId":"174","severity":1,"message":"211","line":36,"column":38,"nodeType":"176","messageId":"177","endLine":36,"endColumn":46},{"ruleId":"174","severity":1,"message":"212","line":38,"column":10,"nodeType":"176","messageId":"177","endLine":38,"endColumn":15},{"ruleId":"174","severity":1,"message":"191","line":39,"column":8,"nodeType":"176","messageId":"177","endLine":39,"endColumn":14},{"ruleId":"174","severity":1,"message":"193","line":41,"column":8,"nodeType":"176","messageId":"177","endLine":41,"endColumn":17},{"ruleId":"174","severity":1,"message":"213","line":69,"column":7,"nodeType":"176","messageId":"177","endLine":69,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":123,"column":6,"nodeType":"222","endLine":123,"endColumn":8,"suggestions":"223"},{"ruleId":"174","severity":1,"message":"224","line":146,"column":9,"nodeType":"176","messageId":"177","endLine":146,"endColumn":23},{"ruleId":"174","severity":1,"message":"225","line":20,"column":10,"nodeType":"176","messageId":"177","endLine":20,"endColumn":16},{"ruleId":"174","severity":1,"message":"226","line":86,"column":10,"nodeType":"176","messageId":"177","endLine":86,"endColumn":21},{"ruleId":"174","severity":1,"message":"227","line":87,"column":7,"nodeType":"176","messageId":"177","endLine":87,"endColumn":14},{"ruleId":"174","severity":1,"message":"228","line":90,"column":10,"nodeType":"176","messageId":"177","endLine":90,"endColumn":23},{"ruleId":"174","severity":1,"message":"229","line":90,"column":25,"nodeType":"176","messageId":"177","endLine":90,"endColumn":41},{"ruleId":"174","severity":1,"message":"230","line":99,"column":17,"nodeType":"176","messageId":"177","endLine":99,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":118,"column":23,"nodeType":"197","messageId":"198","endLine":118,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":118,"column":56,"nodeType":"197","messageId":"198","endLine":118,"endColumn":58},{"ruleId":"195","severity":1,"message":"196","line":119,"column":34,"nodeType":"197","messageId":"198","endLine":119,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":121,"column":23,"nodeType":"197","messageId":"198","endLine":121,"endColumn":25},{"ruleId":"174","severity":1,"message":"231","line":126,"column":9,"nodeType":"176","messageId":"177","endLine":126,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":133,"column":47,"nodeType":"197","messageId":"198","endLine":133,"endColumn":49},{"ruleId":"174","severity":1,"message":"232","line":202,"column":9,"nodeType":"176","messageId":"177","endLine":202,"endColumn":23},{"ruleId":"220","severity":1,"message":"233","line":216,"column":6,"nodeType":"222","endLine":216,"endColumn":8,"suggestions":"234"},{"ruleId":"174","severity":1,"message":"235","line":269,"column":9,"nodeType":"176","messageId":"177","endLine":269,"endColumn":19},{"ruleId":"174","severity":1,"message":"236","line":270,"column":11,"nodeType":"176","messageId":"177","endLine":270,"endColumn":17},{"ruleId":"174","severity":1,"message":"237","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"238","line":2,"column":15,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"174","severity":1,"message":"239","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":18},{"ruleId":"174","severity":1,"message":"240","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},{"ruleId":"174","severity":1,"message":"241","line":7,"column":23,"nodeType":"176","messageId":"177","endLine":7,"endColumn":30},{"ruleId":"174","severity":1,"message":"242","line":7,"column":32,"nodeType":"176","messageId":"177","endLine":7,"endColumn":36},{"ruleId":"174","severity":1,"message":"243","line":16,"column":8,"nodeType":"176","messageId":"177","endLine":16,"endColumn":14},{"ruleId":"174","severity":1,"message":"227","line":71,"column":9,"nodeType":"176","messageId":"177","endLine":71,"endColumn":16},{"ruleId":"174","severity":1,"message":"244","line":76,"column":12,"nodeType":"176","messageId":"177","endLine":76,"endColumn":18},{"ruleId":"174","severity":1,"message":"245","line":76,"column":20,"nodeType":"176","messageId":"177","endLine":76,"endColumn":29},{"ruleId":"220","severity":1,"message":"246","line":80,"column":10,"nodeType":"222","endLine":80,"endColumn":12,"suggestions":"247"},{"ruleId":"174","severity":1,"message":"248","line":102,"column":11,"nodeType":"176","messageId":"177","endLine":102,"endColumn":20},{"ruleId":"174","severity":1,"message":"249","line":104,"column":26,"nodeType":"176","messageId":"177","endLine":104,"endColumn":41},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"237","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":7},{"ruleId":"174","severity":1,"message":"238","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":6},{"ruleId":"174","severity":1,"message":"214","line":70,"column":9,"nodeType":"176","messageId":"177","endLine":70,"endColumn":19},{"ruleId":"174","severity":1,"message":"227","line":72,"column":7,"nodeType":"176","messageId":"177","endLine":72,"endColumn":14},{"ruleId":"174","severity":1,"message":"230","line":77,"column":17,"nodeType":"176","messageId":"177","endLine":77,"endColumn":25},{"ruleId":"174","severity":1,"message":"231","line":99,"column":9,"nodeType":"176","messageId":"177","endLine":99,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":106,"column":47,"nodeType":"197","messageId":"198","endLine":106,"endColumn":49},{"ruleId":"174","severity":1,"message":"202","line":11,"column":9,"nodeType":"176","messageId":"177","endLine":11,"endColumn":14},{"ruleId":"174","severity":1,"message":"250","line":15,"column":9,"nodeType":"176","messageId":"177","endLine":15,"endColumn":23},{"ruleId":"174","severity":1,"message":"204","line":16,"column":9,"nodeType":"176","messageId":"177","endLine":16,"endColumn":20},{"ruleId":"174","severity":1,"message":"251","line":28,"column":11,"nodeType":"176","messageId":"177","endLine":28,"endColumn":30},{"ruleId":"195","severity":1,"message":"252","line":3,"column":27,"nodeType":"197","messageId":"198","endLine":3,"endColumn":29},{"ruleId":"174","severity":1,"message":"253","line":6,"column":11,"nodeType":"176","messageId":"177","endLine":6,"endColumn":20},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'Router' is defined but never used.","'PatientVitalsHistory' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'CheckedInPatientList' is defined but never used.","'setpatientObj' is assigned a value but never used.","'useEffect' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Moment' is defined but never used.","'moment' is defined but never used.","'ButtonMui' is defined but never used.","'CurrentStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'FaEye' is defined but never used.","'FaUserPlus' is defined but never used.","'MdDashboard' is defined but never used.","'MdDeleteForever' is defined but never used.","'MdModeEdit' is defined but never used.","'Link' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'Label' is defined but never used.","'useStyles' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'MdPerson' is defined but never used.","'MdRemoveRedEye' is defined but never used.","'MdDelete' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientsVitalsSigns'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'AddVitalsSigns' is assigned a value but never used.","'Button' is defined but never used.","'permissions' is assigned a value but never used.","'history' is assigned a value but never used.","'currentVitals' is assigned a value but never used.","'setCurrentVitals' is assigned a value but never used.","'setToday' is assigned a value but never used.","'validate' is assigned a value but never used.","'userPermission' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getLatestVitals' and 'patientsVitalsSigns'. Either include them or remove the dependency array.",["257"],"'numberOnly' is assigned a value but never used.","'result' is assigned a value but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'CancelIcon' is defined but never used.","'Step' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'Select' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ServicesPost'. Either include it or remove the dependency array.",["258"],"'createdAt' is assigned a value but never used.","'setPostServices' is assigned a value but never used.","'TiArrowForward' is defined but never used.","'handleMenuItemClick' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'dateParts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [patientsVitalsSigns]",{"range":"265","text":"266"},"Update the dependencies array to be: [getLatestVitals, patientsVitalsSigns]",{"range":"267","text":"268"},"Update the dependencies array to be: [ServicesPost]",{"range":"269","text":"270"},[4147,4149],"[patientsVitalsSigns]",[5918,5920],"[getLatestVitals, patientsVitalsSigns]",[2183,2185],"[ServicesPost]"]