[{"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\index.js":"1","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\App.js":"2","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"8","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js":"9","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js":"10","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js":"11","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\api.js":"12","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js":"13","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js":"14","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js":"15","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js":"16"},{"size":740,"mtime":1658248936177,"results":"17","hashOfConfig":"18"},{"size":974,"mtime":1658248936176,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1658248937968,"results":"20","hashOfConfig":"18"},{"size":9235,"mtime":1658248936454,"results":"21","hashOfConfig":"18"},{"size":3056,"mtime":1658248936454,"results":"22","hashOfConfig":"18"},{"size":1334,"mtime":1662961052933,"results":"23","hashOfConfig":"18"},{"size":2087,"mtime":1658467787262,"results":"24","hashOfConfig":"18"},{"size":8388,"mtime":1664874506346,"results":"25","hashOfConfig":"18"},{"size":9731,"mtime":1664874501791,"results":"26","hashOfConfig":"18"},{"size":9105,"mtime":1663326029480,"results":"27","hashOfConfig":"18"},{"size":7921,"mtime":1662704280289,"results":"28","hashOfConfig":"18"},{"size":445,"mtime":1664874580730,"results":"29","hashOfConfig":"18"},{"size":17326,"mtime":1662704261021,"results":"30","hashOfConfig":"18"},{"size":6765,"mtime":1663313912203,"results":"31","hashOfConfig":"18"},{"size":1905,"mtime":1662961214367,"results":"32","hashOfConfig":"18"},{"size":24920,"mtime":1664872739508,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"amut7g",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\index.js",["75"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["76","77"],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\App.js",["78"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDetail />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["79","80","81"],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PatientVitalsHistory from './../PatientVitals/PatientVitalsHistory';\r\nimport PatientDashboardBody from \"./PatientDashboardBody\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {};\r\n    const [visitVitalExists, setVisitVitalExists] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n          <PatientCardDetail patientObj={patientObj} visitVitalExists={visitVitalExists}/>\r\n          {/*<PatientVitalsHistory  patientObj={patientObj}/>*/}\r\n          <PatientDashboardBody patientObj={patientObj} setVisitVitalExists={setVisitVitalExists}/>\r\n         </CardContent>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {MdDashboard, MdPerson,MdRemoveRedEye} from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport moment from \"moment\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport AddVitals from './AddVitals'\r\nimport SplitActionButton from \"../../layouts/SplitActionButton\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState(props.patientObj)\r\n    const [modal, setModal] = useState(false);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n    useEffect(() => {\r\n        userPermission();\r\n        patientsVitalsSigns();\r\n      }, []);\r\n        const userPermission =()=>{\r\n            axios\r\n                .get(`${baseUrl}account`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setPermissions(response.data.permissions);\r\n\r\n                })\r\n                .catch((error) => {\r\n                });\r\n\r\n        }\r\n        ///GET LIST OF Patients\r\n        async function patientsVitalsSigns() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setPatientList(response.data);\r\n                })\r\n                .catch((error) => {\r\n                });        \r\n        }\r\n        const AddVitalsSigns =(row)=> {\r\n            setpatientObj({...patientObj, ...row});\r\n            setModal(!modal)\r\n        }\r\n\r\n    function actionItems(row){\r\n        return  [            {\r\n            type:'single',\r\n            actions:[\r\n                {\r\n                    name:'View/update',\r\n                    type:'link',\r\n                    icon:<MdRemoveRedEye  size=\"22\"/>,\r\n                    to:{\r\n                        pathname: \"#\",\r\n                        state: { patientObj: row , permissions:permissions  }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n        ]\r\n    }\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"\"\r\n              columns={[\r\n                  {\r\n                      title: \"Capture Date\",\r\n                      field: \"date\",\r\n                        headerStyle: {\r\n                            backgroundColor: \"#039be5\",\r\n                            border:'2px solid #fff',\r\n                            paddingRight:'30px'\r\n                        }\r\n                  },\r\n                  { title: \"Pulse\", field: \"pulse\", filtering: false },\r\n                  { title: \"Respiratory Rate\", field: \"respiratoryRate\", filtering: false },\r\n                  { title: \"Blood Presure\", field: \"bloodPresure\", filtering: false },\r\n                  { title: <p>Temperature &#8451;</p>, field: \"temperature\", filtering: false },\r\n                  { title: \"Height(cm)\", field: \"Height\", filtering: false },\r\n                  { title: \"Weight(kg)\", field: \"Weight\", filtering: false },\r\n                  { title: \"BMI\", field: \"BMI\", filtering: false },\r\n/*                  { title: \"Status\", field: \"BMI\", filtering: false },\r\n                  {\r\n                      title: \"Action\",\r\n                      field: \"actions\",\r\n                      headerStyle: {\r\n                          backgroundColor: \"#992E62\",\r\n                          border:'2px solid #fff',\r\n                          paddingRight:'30px'\r\n                      }\r\n                  },*/\r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                  date:moment(row.captureDate).format(\"YYYY-MM-DD h:mm a\"),\r\n                  pulse:row.pulse,\r\n                  respiratoryRate:row.respiratoryRate, \r\n                  temperature:<p>{row.temperature}&#8451;</p>,\r\n                  bloodPresure:row.systolic + \" /\"+ row.diastolic,\r\n                  Height:row.height+' cm',\r\n                  Weight:row.bodyWeight+' kg',\r\n                  BMI: Math.round(row.bodyWeight/Math.pow((row.height/100),2)),\r\n/*                  actions:\r\n                      <div>\r\n                          {permissions.includes('edit_vitals') || permissions.includes(\"all_permission\") ? (\r\n                              <SplitActionButton actions={actionItems(row)} />\r\n                          ):\"\"\r\n                          }\r\n                      </div>*/\r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                              fontSize:'14px',\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <AddVitals toggle={toggle} showModal={modal} patientObj={patientObj} patientsVitalsSigns={patientsVitalsSigns}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js",["124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Step, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst AddVitals = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    const [selectedOption, setSelectedOption] = useState([]);\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setServices(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });\r\n            axios.get(`${baseUrl}patient/encounter/visit/${patientObj.visitId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}})\r\n                .then(response =>{\r\n                    setSelectedOption(_.uniq(_.map(response.data,'serviceCode')));\r\n                })\r\n        }\r\n    const createdAt = new Date();\r\n\r\n    const [postServices, setPostServices]= useState({\r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();\r\n            if(selectedOption.length > 0){\r\n                setSaving(true);\r\n                let serviceArr = []\r\n                selectedOption.forEach(function (value, index, array) {\r\n                    serviceArr.push(value)\r\n                })\r\n                postServices.personId=patientObj.id\r\n                postServices.visitId=patientObj.visitId\r\n                postServices.serviceCode=serviceArr\r\n                axios.post(`${baseUrl}patient/post`, postServices,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n                )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.commenced=true\r\n                        toast.success(\"Vital signs save successful\");\r\n                        props.toggle()\r\n                        //props.patientsVitalsSigns()\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        toast.error(\"Something went wrong\");\r\n\r\n                    });\r\n            }else{\r\n                toast.error(\"Kindly select a service to post the patient\");\r\n            }\r\n\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#fff\"}}>\r\n                 <Label for=\"post-services\" style={{backgroundColor:\"#fff\",color:'#014d88',fontWeight:'bolder',fontSize:'18px'}}><h5 style={{fontWeight:\"bold\",fontSize:'30px',color:'#992E62'}}>Post Patient</h5></Label>\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                    <DualListBox\r\n                                        options={services}\r\n                                        onChange={setSelectedOption}\r\n                                        selected={selectedOption}\r\n                                    />\r\n{/*\r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n*/}\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    style={{backgroundColor:'#014d88'}}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddVitals;\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\api.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js",["137","138","139","140","141","142","143"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddVitals = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                height: \"\",\r\n                                                personId: props.patientObj.id,\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:props.patientObj.visitId\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        console.log(vital)\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Of Vital Signsss</Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"date\"\r\n                                                name=\"encounterDate\"\r\n                                                id=\"encounterDate\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.encounterDate}\r\n                                                max={today}\r\n                                            />\r\n\r\n                                        </InputGroup>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Pulse</Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupText>\r\n                                                bmp\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"pulse\"\r\n                                                id=\"pulse\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.pulse} \r\n                                            />\r\n                                           \r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.pulse > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Respiratory Rate</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                            bpm\r\n                                        </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"respiratoryRate\"\r\n                                                id=\"respiratoryRate\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.respiratoryRate} \r\n                                            />\r\n                                           \r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.respiratoryRate > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Temperature</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                               <sup>o</sup>C\r\n                                        </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"temperature\"\r\n                                                id=\"temperature\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.temperature} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.temperature > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Presure</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                            systolic(mmHg)\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"systolic\"\r\n                                                id=\"systolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.systolic} \r\n                                            />\r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.systolic > 200 ? (\r\n                                                <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Presure</Label>\r\n                                        \r\n                                        <InputGroup> \r\n                                        <InputGroupText>\r\n                                            diastolic (mmHg)\r\n                                            </InputGroupText>\r\n                                            <Input \r\n                                                type=\"text\"\r\n                                                name=\"diastolic\"\r\n                                                id=\"diastolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.diastolic} \r\n                                            />\r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.diastolic > 200 ? (\r\n                                            <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Body Weight</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                               kg\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"bodyWeight\"\r\n                                                id=\"bodyWeight\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.bodyWeight} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.bodyWeight > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <InputGroup> \r\n                                        <InputGroupText>\r\n                                               m\r\n                                            </InputGroupText>\r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"height\"\r\n                                                id=\"height\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.height} \r\n                                            />\r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.height > 3 ? (\r\n                                            <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddVitals;\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js",["144","145","146","147"],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport {TiArrowForward} from \"react-icons/ti\";\r\nimport {MdDashboard} from \"react-icons/md\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked`);\r\n        console.info(props.actions[0].actions[0].to);\r\n        console.info(`You clicked`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup  variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:`${ props.actions[0].type === 'single' ?'auto':'150px'}`}} >\r\n\r\n\r\n                {props.actions[0].type === 'single'&&\r\n                    <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                        <ButtonGroup variant=\"contained\"\r\n                                     aria-label=\"split button\"\r\n                                     style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'100%',borderColor:'#fff'}}\r\n                                     size=\"large\"\r\n                        >\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                aria-label=\"select merge strategy\"\r\n                                aria-haspopup=\"menu\"\r\n                                style={{backgroundColor:'rgb(153, 46, 98)',borderColor:'#fff'}}\r\n                            >\r\n                                {props.actions[0].actions[0].icon}\r\n                            </Button>\r\n                            <Button\r\n                                style={{backgroundColor:'rgb(153, 46, 98)',borderColor:'#fff'}}\r\n                            >\r\n                                <span style={{fontSize:'0.85em', color:'#fff', fontWeight:'bolder',borderColor:'#fff'}}>{props.actions[0].actions[0].name}</span>\r\n                            </Button>\r\n\r\n                        </ButtonGroup>\r\n                    </Link>\r\n                }\r\n                {props.actions[0].type === 'multiple'&&\r\n                    <>\r\n                        <Link to={props.actions[0].actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                            <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                                <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].actions[0].name}</Typography>\r\n                            </Button>\r\n                        </Link>\r\n                        <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                            1\r\n                        </Divider>\r\n                        <Button\r\n                            size=\"medium\"\r\n                            aria-controls={open ? 'split-button-menu' : undefined}\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggle}\r\n                            style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                        >\r\n                            <FaCaretDown size='24' />\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            </ButtonGroup>\r\n            {props.actions[0].type === 'multiple'&&\r\n                <>\r\n                    <Popper\r\n                        open={open}\r\n                        anchorEl={anchorRef.current}\r\n                        role={undefined}\r\n                        transition\r\n                        disablePortal\r\n                        style={{ zIndex:'10000' }}\r\n                    >\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                    zIndex:'1000'\r\n                                }}\r\n                            >\r\n                                width: 130,\r\n                                <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                            {props.actions[0].actions.slice(1).map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={Math.random()}\r\n                                                >\r\n                                                    <Link\r\n                                                        to={option.to}\r\n                                                    >\r\n                                                        {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                                    </Link>\r\n\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </>\r\n            }\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js",["148","149"],"import React, {useState, Fragment } from \"react\";\r\nimport {Card, Col, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport CheckedInPatientList from \"../CheckedInPatients/CheckedInPatientsList\";\r\nimport PatientVitalsHistory from \"../PatientVitals/PatientVitalsHistory\";\r\nimport CurrentVitals from \"../PatientVitals/CurrentVitals\";\r\n\r\nconst divStyle = {\r\n    borderRadius: \"2px\",\r\n    fontSize: 14,\r\n};\r\nfunction PatientDashboardBody(props) {\r\n    const [key, setKey] = useState('vitals-history');\r\n    const [patientObj, setpatientObj] = useState(props.patientObj)\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col xl={12}>\r\n                    <Card style={divStyle}>\r\n\r\n                        <Card.Body>\r\n                            {/* <!-- Nav tabs --> */}\r\n                            <div className=\"custom-tab-1\">\r\n                                <Tabs\r\n                                    id=\"controlled-tab-example\"\r\n                                    activeKey={key}\r\n                                    onSelect={(k) => setKey(k)}\r\n                                    className=\"mb-3\"\r\n                                >\r\n                                    <Tab eventKey=\"vitals-history\" title=\"History\">\r\n                                        <PatientVitalsHistory patientObj={patientObj}  />\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"current-Vitals\" title=\"Capture Vitals\">\r\n                                        <CurrentVitals patientObj={patientObj} setVisitVitalExists={props.setVisitVitalExists}/>\r\n                                    </Tab>\r\n\r\n\r\n                                </Tabs>\r\n\r\n\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nexport default PatientDashboardBody;","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],{"ruleId":"167","severity":1,"message":"168","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":23},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"175","line":3,"column":19,"nodeType":"169","messageId":"170","endLine":3,"endColumn":25},{"ruleId":"167","severity":1,"message":"176","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":28},{"ruleId":"167","severity":1,"message":"177","line":52,"column":12,"nodeType":"169","messageId":"170","endLine":52,"endColumn":15},{"ruleId":"167","severity":1,"message":"178","line":52,"column":17,"nodeType":"169","messageId":"170","endLine":52,"endColumn":23},{"ruleId":"167","severity":1,"message":"179","line":1,"column":26,"nodeType":"169","messageId":"170","endLine":1,"endColumn":35},{"ruleId":"167","severity":1,"message":"180","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"181","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":29},{"ruleId":"167","severity":1,"message":"182","line":15,"column":8,"nodeType":"169","messageId":"170","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"183","line":16,"column":8,"nodeType":"169","messageId":"170","endLine":16,"endColumn":14},{"ruleId":"167","severity":1,"message":"184","line":19,"column":8,"nodeType":"169","messageId":"170","endLine":19,"endColumn":17},{"ruleId":"167","severity":1,"message":"185","line":82,"column":9,"nodeType":"169","messageId":"170","endLine":82,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":88,"column":70,"nodeType":"188","messageId":"189","endLine":88,"endColumn":72},{"ruleId":"186","severity":1,"message":"187","line":93,"column":69,"nodeType":"188","messageId":"189","endLine":93,"endColumn":71},{"ruleId":"190","severity":1,"message":"191","line":122,"column":51,"nodeType":"188","messageId":"192","endLine":122,"endColumn":52},{"ruleId":"167","severity":1,"message":"193","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"194","line":5,"column":16,"nodeType":"169","messageId":"170","endLine":5,"endColumn":26},{"ruleId":"167","severity":1,"message":"195","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":21},{"ruleId":"167","severity":1,"message":"196","line":6,"column":23,"nodeType":"169","messageId":"170","endLine":6,"endColumn":38},{"ruleId":"167","severity":1,"message":"197","line":6,"column":40,"nodeType":"169","messageId":"170","endLine":6,"endColumn":50},{"ruleId":"167","severity":1,"message":"198","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":14},{"ruleId":"167","severity":1,"message":"199","line":28,"column":9,"nodeType":"169","messageId":"170","endLine":28,"endColumn":13},{"ruleId":"167","severity":1,"message":"200","line":28,"column":14,"nodeType":"169","messageId":"170","endLine":28,"endColumn":22},{"ruleId":"167","severity":1,"message":"201","line":28,"column":23,"nodeType":"169","messageId":"170","endLine":28,"endColumn":33},{"ruleId":"167","severity":1,"message":"202","line":28,"column":34,"nodeType":"169","messageId":"170","endLine":28,"endColumn":42},{"ruleId":"167","severity":1,"message":"203","line":30,"column":10,"nodeType":"169","messageId":"170","endLine":30,"endColumn":15},{"ruleId":"167","severity":1,"message":"204","line":55,"column":7,"nodeType":"169","messageId":"170","endLine":55,"endColumn":16},{"ruleId":"167","severity":1,"message":"205","line":102,"column":12,"nodeType":"169","messageId":"170","endLine":102,"endColumn":22},{"ruleId":"167","severity":1,"message":"206","line":102,"column":24,"nodeType":"169","messageId":"170","endLine":102,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":155,"column":76,"nodeType":"188","messageId":"189","endLine":155,"endColumn":78},{"ruleId":"167","severity":1,"message":"198","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":14},{"ruleId":"167","severity":1,"message":"207","line":24,"column":11,"nodeType":"169","messageId":"170","endLine":24,"endColumn":15},{"ruleId":"167","severity":1,"message":"208","line":24,"column":16,"nodeType":"169","messageId":"170","endLine":24,"endColumn":24},{"ruleId":"167","severity":1,"message":"195","line":28,"column":9,"nodeType":"169","messageId":"170","endLine":28,"endColumn":20},{"ruleId":"167","severity":1,"message":"209","line":28,"column":22,"nodeType":"169","messageId":"170","endLine":28,"endColumn":30},{"ruleId":"167","severity":1,"message":"199","line":29,"column":9,"nodeType":"169","messageId":"170","endLine":29,"endColumn":13},{"ruleId":"167","severity":1,"message":"200","line":29,"column":14,"nodeType":"169","messageId":"170","endLine":29,"endColumn":22},{"ruleId":"167","severity":1,"message":"201","line":29,"column":23,"nodeType":"169","messageId":"170","endLine":29,"endColumn":33},{"ruleId":"167","severity":1,"message":"202","line":29,"column":34,"nodeType":"169","messageId":"170","endLine":29,"endColumn":42},{"ruleId":"167","severity":1,"message":"203","line":31,"column":10,"nodeType":"169","messageId":"170","endLine":31,"endColumn":15},{"ruleId":"167","severity":1,"message":"182","line":32,"column":8,"nodeType":"169","messageId":"170","endLine":32,"endColumn":14},{"ruleId":"167","severity":1,"message":"184","line":34,"column":8,"nodeType":"169","messageId":"170","endLine":34,"endColumn":17},{"ruleId":"167","severity":1,"message":"210","line":36,"column":8,"nodeType":"169","messageId":"170","endLine":36,"endColumn":25},{"ruleId":"167","severity":1,"message":"204","line":59,"column":7,"nodeType":"169","messageId":"170","endLine":59,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":115,"column":10,"nodeType":"213","endLine":115,"endColumn":12,"suggestions":"214"},{"ruleId":"167","severity":1,"message":"215","line":141,"column":15,"nodeType":"169","messageId":"170","endLine":141,"endColumn":29},{"ruleId":"167","severity":1,"message":"216","line":146,"column":14,"nodeType":"169","messageId":"170","endLine":146,"endColumn":25},{"ruleId":"167","severity":1,"message":"217","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"218","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"219","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":18},{"ruleId":"167","severity":1,"message":"220","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":14},{"ruleId":"167","severity":1,"message":"221","line":7,"column":23,"nodeType":"169","messageId":"170","endLine":7,"endColumn":30},{"ruleId":"167","severity":1,"message":"222","line":7,"column":32,"nodeType":"169","messageId":"170","endLine":7,"endColumn":36},{"ruleId":"167","severity":1,"message":"223","line":16,"column":8,"nodeType":"169","messageId":"170","endLine":16,"endColumn":14},{"ruleId":"167","severity":1,"message":"224","line":71,"column":9,"nodeType":"169","messageId":"170","endLine":71,"endColumn":16},{"ruleId":"167","severity":1,"message":"225","line":76,"column":12,"nodeType":"169","messageId":"170","endLine":76,"endColumn":18},{"ruleId":"167","severity":1,"message":"226","line":76,"column":20,"nodeType":"169","messageId":"170","endLine":76,"endColumn":29},{"ruleId":"211","severity":1,"message":"227","line":80,"column":10,"nodeType":"213","endLine":80,"endColumn":12,"suggestions":"228"},{"ruleId":"167","severity":1,"message":"229","line":102,"column":11,"nodeType":"169","messageId":"170","endLine":102,"endColumn":20},{"ruleId":"167","severity":1,"message":"230","line":104,"column":26,"nodeType":"169","messageId":"170","endLine":104,"endColumn":41},{"ruleId":"167","severity":1,"message":"179","line":1,"column":26,"nodeType":"169","messageId":"170","endLine":1,"endColumn":35},{"ruleId":"167","severity":1,"message":"217","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"218","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"224","line":62,"column":9,"nodeType":"169","messageId":"170","endLine":62,"endColumn":16},{"ruleId":"167","severity":1,"message":"231","line":67,"column":19,"nodeType":"169","messageId":"170","endLine":67,"endColumn":27},{"ruleId":"167","severity":1,"message":"232","line":88,"column":15,"nodeType":"169","messageId":"170","endLine":88,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":95,"column":53,"nodeType":"188","messageId":"189","endLine":95,"endColumn":55},{"ruleId":"167","severity":1,"message":"193","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":14},{"ruleId":"167","severity":1,"message":"233","line":15,"column":9,"nodeType":"169","messageId":"170","endLine":15,"endColumn":23},{"ruleId":"167","severity":1,"message":"195","line":16,"column":9,"nodeType":"169","messageId":"170","endLine":16,"endColumn":20},{"ruleId":"167","severity":1,"message":"234","line":32,"column":11,"nodeType":"169","messageId":"170","endLine":32,"endColumn":30},{"ruleId":"167","severity":1,"message":"235","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":28},{"ruleId":"167","severity":1,"message":"206","line":13,"column":24,"nodeType":"169","messageId":"170","endLine":13,"endColumn":37},{"ruleId":"167","severity":1,"message":"236","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":15},{"ruleId":"167","severity":1,"message":"205","line":78,"column":11,"nodeType":"169","messageId":"170","endLine":78,"endColumn":21},{"ruleId":"167","severity":1,"message":"237","line":79,"column":12,"nodeType":"169","messageId":"170","endLine":79,"endColumn":23},{"ruleId":"167","severity":1,"message":"224","line":80,"column":9,"nodeType":"169","messageId":"170","endLine":80,"endColumn":16},{"ruleId":"167","severity":1,"message":"238","line":83,"column":12,"nodeType":"169","messageId":"170","endLine":83,"endColumn":25},{"ruleId":"167","severity":1,"message":"239","line":83,"column":27,"nodeType":"169","messageId":"170","endLine":83,"endColumn":43},{"ruleId":"167","severity":1,"message":"231","line":90,"column":19,"nodeType":"169","messageId":"170","endLine":90,"endColumn":27},{"ruleId":"186","severity":1,"message":"187","line":110,"column":26,"nodeType":"188","messageId":"189","endLine":110,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":110,"column":58,"nodeType":"188","messageId":"189","endLine":110,"endColumn":60},{"ruleId":"186","severity":1,"message":"187","line":111,"column":40,"nodeType":"188","messageId":"189","endLine":111,"endColumn":42},{"ruleId":"186","severity":1,"message":"187","line":112,"column":40,"nodeType":"188","messageId":"189","endLine":112,"endColumn":42},{"ruleId":"167","severity":1,"message":"232","line":118,"column":11,"nodeType":"169","messageId":"170","endLine":118,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":125,"column":49,"nodeType":"188","messageId":"189","endLine":125,"endColumn":51},{"ruleId":"167","severity":1,"message":"240","line":176,"column":11,"nodeType":"169","messageId":"170","endLine":176,"endColumn":25},{"ruleId":"211","severity":1,"message":"241","line":193,"column":8,"nodeType":"213","endLine":193,"endColumn":10,"suggestions":"242"},{"ruleId":"167","severity":1,"message":"243","line":223,"column":11,"nodeType":"169","messageId":"170","endLine":223,"endColumn":21},{"ruleId":"167","severity":1,"message":"244","line":224,"column":15,"nodeType":"169","messageId":"170","endLine":224,"endColumn":21},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["245"],"no-negated-in-lhs",["246"],"'Router' is defined but never used.","'PatientVitalsHistory' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'useEffect' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Moment' is defined but never used.","'moment' is defined but never used.","'ButtonMui' is defined but never used.","'CurrentStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'FaEye' is defined but never used.","'FaUserPlus' is defined but never used.","'MdDashboard' is defined but never used.","'MdDeleteForever' is defined but never used.","'MdModeEdit' is defined but never used.","'Link' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'Label' is defined but never used.","'useStyles' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'MdPerson' is defined but never used.","'SplitActionButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientsVitalsSigns'. Either include it or remove the dependency array.","ArrayExpression",["247"],"'AddVitalsSigns' is assigned a value but never used.","'actionItems' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'CancelIcon' is defined but never used.","'Step' is defined but never used.","'Segment' is defined but never used.","'Icon' is defined but never used.","'Select' is defined but never used.","'history' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ServicesPost'. Either include it or remove the dependency array.",["248"],"'createdAt' is assigned a value but never used.","'setPostServices' is assigned a value but never used.","'setToday' is assigned a value but never used.","'validate' is assigned a value but never used.","'TiArrowForward' is defined but never used.","'handleMenuItemClick' is assigned a value but never used.","'CheckedInPatientList' is defined but never used.","'Button' is defined but never used.","'permissions' is assigned a value but never used.","'currentVitals' is assigned a value but never used.","'setCurrentVitals' is assigned a value but never used.","'userPermission' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLatestVitals'. Either include it or remove the dependency array.",["249"],"'numberOnly' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [patientsVitalsSigns]",{"range":"256","text":"257"},"Update the dependencies array to be: [ServicesPost]",{"range":"258","text":"259"},"Update the dependencies array to be: [getLatestVitals]",{"range":"260","text":"261"},[4231,4233],"[patientsVitalsSigns]",[2262,2264],"[ServicesPost]",[6051,6053],"[getLatestVitals]"]