[{"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\index.js":"1","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\App.js":"2","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"8","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js":"9","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js":"10","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js":"11","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\api.js":"12","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js":"13","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js":"14","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js":"15","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js":"16"},{"size":740,"mtime":1658248936177,"results":"17","hashOfConfig":"18"},{"size":974,"mtime":1658248936176,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1658248937968,"results":"20","hashOfConfig":"18"},{"size":9235,"mtime":1658248936454,"results":"21","hashOfConfig":"18"},{"size":3056,"mtime":1658248936454,"results":"22","hashOfConfig":"18"},{"size":1317,"mtime":1658324132511,"results":"23","hashOfConfig":"18"},{"size":1950,"mtime":1658259589785,"results":"24","hashOfConfig":"18"},{"size":8302,"mtime":1658335379575,"results":"25","hashOfConfig":"18"},{"size":10544,"mtime":1658323701892,"results":"26","hashOfConfig":"18"},{"size":7222,"mtime":1658324486384,"results":"27","hashOfConfig":"18"},{"size":7114,"mtime":1658436221513,"results":"28","hashOfConfig":"18"},{"size":441,"mtime":1658437425556,"results":"29","hashOfConfig":"18"},{"size":17231,"mtime":1658248937966,"results":"30","hashOfConfig":"18"},{"size":4685,"mtime":1658387120897,"results":"31","hashOfConfig":"18"},{"size":1848,"mtime":1658259821053,"results":"32","hashOfConfig":"18"},{"size":20126,"mtime":1658428903634,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"amut7g",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"37"},"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\index.js",["78"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";  \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <Router basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </Router>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["79","80"],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\App.js",["81"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/patient-dashboard\">\r\n            <PatientDetail />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        \r\n          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["82","83","84"],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PatientVitalsHistory from './../PatientVitals/PatientVitalsHistory';\r\nimport PatientDashboardBody from \"./PatientDashboardBody\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [key, setKey] = useState('home');\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card >\r\n        <CardContent>\r\n          <PatientCardDetail patientObj={patientObj}/>            \r\n          {/*<PatientVitalsHistory  patientObj={patientObj}/>*/}\r\n          <PatientDashboardBody patientObj={patientObj}/>\r\n         </CardContent>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["85","86","87","88","89","90","91","92","93","94"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport moment from \"moment\";\r\nimport PostPatient from './PostPatient'\r\nimport {Link} from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n  \r\n  const CurrentStatus = ()=>{\r\n\r\n        return (  <Label color=\"blue\" size=\"mini\">Active</Label>);\r\n}\r\nconst getHospitalNumber = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n  return hospitalNumber ? hospitalNumber.value : '';\r\n};\r\nconst getPhoneNumber = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n  return phoneNumber ? phoneNumber.value : '';\r\n};\r\nconst getAddress = (identifier) => {     \r\n  const identifiers = identifier;\r\n  const address = identifiers.address.find(obj => obj.city);      \r\n  return address ? address.city : '';\r\n};\r\n\r\nconst PostPatientService =(row)=> {\r\n  setpatientObj({...patientObj, ...row});\r\n  setModal(!modal)\r\n}\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n\r\n\r\n                    <Col md={11}>\r\n                        <Row className={\"mt-1\"}>\r\n                            <Col md={12} className={classes.root2} >\r\n                                <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                                    {patientObj.surname + \", \" + patientObj.firstName + \" \" + patientObj.otherName}\r\n                                    < span style={{color:'green'}}>\r\n                                             {\": \"+\"Active\"}\r\n                                        </span>\r\n                                </b>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Hospital Number : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                                    </span>\r\n                            </Col>\r\n\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                                    </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Age : <b style={{color:'#0B72AA'}}>{calculate_age(patientObj.dateOfBirth) }</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} style={{marginTop:\"10px\"}}>\r\n                                    <span>\r\n                                        {\" \"}\r\n                                        Gender :{\" \"}\r\n                                        <b style={{color:'#0B72AA'}}>{patientObj.gender.display }</b>\r\n                                    </span>\r\n\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={4} className={classes.root2} style={{marginTop:\"10px\"}}>\r\n                                <span>\r\n                                    {\" \"}\r\n                                    Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                                </span>\r\n\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <div className=\"float-end\" style={{floated:'right'}}>\r\n                        {\" \"}<Link to={\"/\"} >\r\n                        <Button\r\n                            floated='right'\r\n                            style={{padding:'0px'}}\r\n                        >\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                floated='right'\r\n                                startIcon={<TiArrowBack  />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </MatButton>\r\n                        </Button>\r\n\r\n                    </Link>\r\n\r\n                      {\" \"}<Button  floated='right'  style={{backgroundColor:\"#014d88\", color:'#fff',height:'35px'}} onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\r\n\r\n                    </div>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n            <PostPatient toggle={toggle} showModal={modal} patientObj={patientObj} />\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\CheckedInPatients\\CheckedInPatientsList.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../../api\";\r\nimport {FaEye, FaUserPlus} from \"react-icons/fa\";\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit,MdPerson} from \"react-icons/md\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\nimport SplitActionButton from '../../layouts/SplitActionButton'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState([])\r\n    const [permissions, setPermissions] = useState([]);\r\n    useEffect(() => {\r\n        userPermission();\r\n    }, []);\r\n    //Get list of Finger index\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            axios\r\n                .get(`${baseUrl}patient/checked-in-by-service/triage-code`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n\r\n                    setPatientList(response.data);\r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n    console.log(patientList)\r\n    function actionItems(row){\r\n        return  [\r\n            {\r\n                name:'View',\r\n                type:'link',\r\n                icon:<FaEye  size=\"22\"/>,\r\n                to:{\r\n                    pathname: \"/patient-dashboard\",\r\n                    state: { patientObj: row , permissions:permissions  }\r\n                }\r\n            },\r\n            {...(permissions.includes('view_patient') || permissions.includes(\"all_permission\")&&\r\n                    {\r\n                        name:'Patient Dashboard',\r\n                        type:'link',\r\n                        icon:<MdPerson size=\"20\" color='rgb(1, 77, 136)' />,\r\n                        to:{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row , permissions:permissions  }\r\n                        }\r\n                    }\r\n                )},\r\n        ]\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n       <Card>\r\n         <CardBody>\r\n\r\n        \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Checked-In\"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Gender\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n\r\n                    name:row.firstName + \" \" + row.surname,\r\n                    hospital_number: getHospitalNumber(row.identifier),\r\n                    gender:row.gender.display,\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n\r\n                  actions:\r\n                      <div>\r\n                          {permissions.includes('view_patient') || permissions.includes(\"all_permission\") ? (\r\n                              <SplitActionButton actions={actionItems(row)} />\r\n                          ):\"\"\r\n                          }\r\n{/*\r\n                    <Menu>\r\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                          Actions <span aria-hidden>▾</span>\r\n                        </MenuButton>\r\n                            <MenuList style={{ color:\"#000000 !important\"}} >\r\n                                \r\n                                <MenuItem style={{ color:\"#000 !important\"}}>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: \"/patient-dashboard\",\r\n                                            state: { patientObj: row  }\r\n                                        }}>\r\n                                    <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>                   \r\n                                    </Link>\r\n                                </MenuItem>                                    \r\n    \r\n                          </MenuList>\r\n                    </Menu>*/}\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                            headerStyle: {\r\n                                backgroundColor: \"#014d88\",\r\n                                color: \"#fff\",\r\n                                fontSize:'16px',\r\n                                padding:'10px'\r\n                            },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n           \r\n        </CardBody>\r\n       </Card>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\PatientVitalsHistory.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {  Card,CardBody,} from 'reactstrap';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport moment from \"moment\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport AddVitals from './AddVitals'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {\r\n    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [patientObj, setpatientObj] = useState(props.patientObj)\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    useEffect(() => {\r\n        patientsVitalsSigns()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patientsVitalsSigns() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/person/${patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setPatientList(response.data);\r\n                })\r\n                .catch((error) => {\r\n                });        \r\n        }\r\n        const AddVitalsSigns =(row)=> {\r\n            setpatientObj({...patientObj, ...row});\r\n            setModal(!modal)\r\n        }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"\"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Ecounter Date\",\r\n                  field: \"date\",\r\n                    headerStyle: {\r\n                        backgroundColor: \"#039be5\",\r\n                        border:'2px solid #fff',\r\n                        paddingRight:'30px'\r\n                    }\r\n                },\r\n                { title: \"Pulse\", field: \"pulse\", filtering: false },\r\n                { title: \"Respiratory Rate\", field: \"respiratoryRate\", filtering: false },\r\n                { title: \"Blood Presure\", field: \"bloodPresure\", filtering: false },\r\n                { title: \"Temperature\", field: \"temperature\", filtering: false },\r\n                { title: \"Height\", field: \"Height\", filtering: false },\r\n                { title: \"Weight\", field: \"Weight\", filtering: false },\r\n                { title: \"BMI\", field: \"BMI\", filtering: false },\r\n\r\n              \r\n              ]}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                  date:row.encounterDate,\r\n                  pulse:row.pulse,\r\n                  respiratoryRate:row.respiratoryRate, \r\n                  temperature:row.temperature,\r\n                  bloodPresure:row.systolic + \" /\"+ row.diastolic,\r\n                  Height:row.height,\r\n                  Weight:row.bodyWeight,\r\n                  BMI: Math.round(row.bodyWeight/Math.pow(row.height,2))\r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                              fontSize:'14px',\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <AddVitals toggle={toggle} showModal={modal} patientObj={patientObj} patientsVitalsSigns={patientsVitalsSigns}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PostPatient.js",["126","127","128","129","130","131","132","133"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst AddVitals = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    console.log('response.data')\r\n                    console.log(response.data)\r\n                    console.log('response.data')\r\n                    setServices(\r\n                        Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n    const createdAt = new Date();\r\n\r\n    const [postServices, setPostServices]= useState({                                                  \r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        facilityId: 1,\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            let serviceArr = []\r\n            selectedOption.forEach(function (value, index, array) {\r\n                serviceArr.push(value['value'])\r\n            })\r\n            postServices.personId=patientObj.id\r\n            postServices.visitId=patientObj.visitId\r\n            postServices.serviceCode=serviceArr\r\n            console.log('post service')\r\n            console.log(postServices)\r\n            console.log('post service')\r\n            axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  //props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Post Patient\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                              \r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saved</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddVitals;\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\api.js",[],"C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\AddVitals.js",["134","135","136","137","138","139"],"import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddVitals = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: props.patientObj.id,\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:props.patientObj.visitId\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        console.log(vital)\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Vital Signs\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Of Vital Signs</Label>\r\n                                        <InputGroup> \r\n                                            <Input \r\n                                                type=\"date\"\r\n                                                name=\"encounterDate\"\r\n                                                id=\"encounterDate\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.encounterDate} \r\n                                            />\r\n\r\n                                        </InputGroup>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Pulse</Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupText>\r\n                                                bmp\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"pulse\"\r\n                                                id=\"pulse\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.pulse} \r\n                                            />\r\n                                           \r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.pulse > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Respiratory Rate</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                            bpm\r\n                                        </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"respiratoryRate\"\r\n                                                id=\"respiratoryRate\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.respiratoryRate} \r\n                                            />\r\n                                           \r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.respiratoryRate > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Temperature</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                               <sup>o</sup>C\r\n                                        </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"temperature\"\r\n                                                id=\"temperature\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.temperature} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.temperature > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Presure</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                            systolic(mmHg)\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"systolic\"\r\n                                                id=\"systolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.systolic} \r\n                                            />\r\n                                           \r\n                                        </InputGroup>\r\n                                        {vital.systolic > 200 ? (\r\n                                                <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Blood Presure</Label>\r\n                                        \r\n                                        <InputGroup> \r\n                                        <InputGroupText>\r\n                                            diastolic (mmHg)\r\n                                            </InputGroupText>\r\n                                            <Input \r\n                                                type=\"text\"\r\n                                                name=\"diastolic\"\r\n                                                id=\"diastolic\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.diastolic} \r\n                                            />\r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.diastolic > 200 ? (\r\n                                            <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Body Weight</Label>\r\n                                        <InputGroup>\r\n                                        <InputGroupText>\r\n                                               kg\r\n                                            </InputGroupText> \r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"bodyWeight\"\r\n                                                id=\"bodyWeight\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.bodyWeight} \r\n                                            />\r\n                                           \r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.bodyWeight > 200 ? (\r\n                                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                            ) : \"\" \r\n                                        }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Height</Label>\r\n                                        <InputGroup> \r\n                                        <InputGroupText>\r\n                                               m\r\n                                            </InputGroupText>\r\n                                            <Input \r\n                                                type=\"number\"\r\n                                                name=\"height\"\r\n                                                id=\"height\"\r\n                                                onChange={handleInputChangeVitalSignDto}\r\n                                                value={vital.height} \r\n                                            />\r\n                                            \r\n                                        </InputGroup>\r\n                                        {vital.height > 3 ? (\r\n                                            <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                                        ) : \"\" }\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                                </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddVitals;\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\layouts\\SplitActionButton.js",["140","141","142"],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Typography from '@mui/material/Typography';\r\nimport {FaEye, FaCaretDown } from \"react-icons/fa\";\r\nimport Divider from '@mui/material/Divider';\r\nimport {useRef} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['Delete', 'Edit'];\r\n\r\n\r\n\r\nexport default function SplitActionButton(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = () => {\r\n        console.info(`You clicked ${options[selectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuItemClick = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ButtonGroup variant=\"contained\" ref={anchorRef} style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'150px'}} >\r\n                <Link to={props.actions[0].to} style={{borderRight:'20px solid #fff !important'}}>\r\n                    <Button size=\"small\" onClick={handleClick} variant=\"contained\" startIcon={props.actions[0].icon} style={{backgroundColor:'rgb(153, 46, 98)'}}>\r\n                        <Typography variant=\"h7\" style={{fontWeight:'bolder'}}>{props.actions[0].name}</Typography>\r\n                    </Button>\r\n                </Link>\r\n\r\n                <Divider orientation=\"vertical\" flexItem style={{borderRight:'20px solid #fff !important', backgroundColor:'#fff',width:'1px', height:'26px',marginTop:'2px'}}>\r\n                    1\r\n                </Divider>\r\n                <Button\r\n                    size=\"medium\"\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    onClick={handleToggle}\r\n                    style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                >\r\n                    <FaCaretDown size='24' />\r\n                </Button>\r\n            </ButtonGroup>\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                style={{ zIndex:'10000' }}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                            zIndex:'1000'\r\n                        }}\r\n                    >\r\n                        {/*width: 130,*/}\r\n                        <Paper sx={{ minWidth:'130px', maxWidth: '150px', marginTop:'2px', zIndex:'1000' }}>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                                    {props.actions.slice(1).map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={Math.random()}\r\n                                            {...(option.type==='button'&& {onClick:option.onClick})}\r\n                                        >\r\n                                            <Link\r\n                                                to={option.type==='link'?option.to:'#'}\r\n                                                style={{width:'100%'}}\r\n                                            >\r\n                                                {option.icon}<span style={{color: 'rgb(153, 46, 98)', fontWeight:'bolder', fontSize:'12px'}}>{option.name}</span>\r\n                                            </Link>\r\n\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDashboardBody.js",["143","144"],"import React, {useState, Fragment } from \"react\";\r\nimport {Card, Col, Row, Tab, Tabs} from \"react-bootstrap\";\r\nimport CheckedInPatientList from \"../CheckedInPatients/CheckedInPatientsList\";\r\nimport PatientVitalsHistory from \"../PatientVitals/PatientVitalsHistory\";\r\nimport CurrentVitals from \"../PatientVitals/CurrentVitals\";\r\n\r\nconst divStyle = {\r\n    borderRadius: \"2px\",\r\n    fontSize: 14,\r\n};\r\nfunction PatientDashboardBody(props) {\r\n    const [key, setKey] = useState('current-Vitals');\r\n    const [patientObj, setpatientObj] = useState(props.patientObj)\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col xl={12}>\r\n                    <Card style={divStyle}>\r\n\r\n                        <Card.Body>\r\n                            {/* <!-- Nav tabs --> */}\r\n                            <div className=\"custom-tab-1\">\r\n                                <Tabs\r\n                                    id=\"controlled-tab-example\"\r\n                                    activeKey={key}\r\n                                    onSelect={(k) => setKey(k)}\r\n                                    className=\"mb-3\"\r\n                                >\r\n\r\n                                    <Tab eventKey=\"current-Vitals\" title=\"Vitals\">\r\n                                        <CurrentVitals patientObj={patientObj}/>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"vitals-history\" title=\"History\">\r\n                                        <PatientVitalsHistory patientObj={patientObj} />\r\n                                    </Tab>\r\n\r\n                                </Tabs>\r\n\r\n\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nexport default PatientDashboardBody;","C:\\Users\\gicha\\OneDrive\\Desktop\\DataFi-Nigeria\\Dev\\Lamisplus\\triage-module\\src\\main\\webapp\\jsx\\components\\PatientVitals\\CurrentVitals.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useEffect, useState } from 'react'\r\nimport {Card, CardBody, FormGroup, Input, InputGroup, InputGroupText, Label, Spinner} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../../../api\";\r\nimport {toast} from \"react-toastify\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        border:'2px solid #014d88',\r\n        borderRadius:'0px',\r\n        fontSize:'16px',\r\n        color:'#000'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    inputGroupText:{\r\n        backgroundColor:'#014d88',\r\n        fontWeight:\"bolder\",\r\n        color:'#fff',\r\n        borderRadius:'0px'\r\n    },\r\n    label:{\r\n        fontSize:'16px',\r\n        color:'rgb(153, 46, 98)',\r\n        fontWeight:'600'\r\n    }\r\n}))\r\n\r\n\r\n\r\nfunction CurrentVitals(props) {\r\n    const patientObj = props.patientObj;\r\n    const [permissions, setPermissions] = useState([]);\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [currentVitals, setCurrentVitals] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [bmi, setBMI] = useState(0);\r\n    const [visitVitalStatus, setVisitVitalStatus] = useState(false);\r\n    const [currentVitalId, setCurrentVitalId]=useState(null);\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: 1,\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        pulse: \"\",\r\n        respiratoryRate: \"\",\r\n        systolic:\"\",\r\n        temperature: \"\",\r\n        visitId:props.patientObj.visitId\r\n    })\r\n\r\n    const handleInputChangeVitalSignDto = e => {\r\n        setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        if(e.target.name =='bodyWeight' || e.target.name == 'height'){\r\n            let height = e.target.name == 'height'? e.target.value:vital.height;\r\n            let weight = e.target.name == 'bodyWeight'? e.target.value:vital.bodyWeight;\r\n            setBMI(Math.round(weight/Math.pow(height,2)))\r\n        }\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //If visit has a vital sign update else create new\r\n        if(visitVitalStatus){\r\n            setSaving(true);\r\n            axios.put(`${baseUrl}patient/vital-sign/${currentVitalId}`, vital,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            ).then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.commenced=true\r\n                    toast.success(\"Vital signs update successful\");\r\n                    props.toggle()\r\n                    props.patientsVitalsSigns()\r\n\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n\r\n                });\r\n        }else{\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n\r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.commenced=true\r\n                    toast.success(\"Vital signs save successful\");\r\n                    props.toggle()\r\n                    props.patientsVitalsSigns()\r\n\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n    const userPermission =()=>{\r\n        axios\r\n            .get(`${baseUrl}account`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setPermissions(response.data.permissions);\r\n\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getLatestVitals()\r\n    }, []);\r\n    ///GET LIST OF Patients\r\n    async function getLatestVitals() {\r\n        axios\r\n            .get(`${baseUrl}patient/vital-sign/visit/${props.patientObj.visitId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log('current vitals')\r\n                console.log(response.data)\r\n                console.log('current vitals')\r\n                setVitalSignDto(response.data);\r\n                setBMI(Math.round(response.data.bodyWeight/Math.pow(response.data.height,2)));\r\n                setVisitVitalStatus(true);\r\n                setCurrentVitalId(response.data.id)\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    return (\r\n        <div>\r\n            <Card >\r\n                <CardBody>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label} >Date Of Vital Signs</Label>\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"encounterDate\"\r\n                                            id=\"encounterDate\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.encounterDate}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Pulse</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            bmp\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"pulse\"\r\n                                            id=\"pulse\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.pulse}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n\r\n                                    </InputGroup>\r\n                                    {vital.pulse > 200 ? (\r\n                                        <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Respiratory Rate</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            bpm\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"respiratoryRate\"\r\n                                            id=\"respiratoryRate\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.respiratoryRate}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n\r\n                                    </InputGroup>\r\n                                    {vital.respiratoryRate > 200 ? (\r\n                                        <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Temperature</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            <sup>o</sup>C\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"temperature\"\r\n                                            id=\"temperature\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.temperature}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n\r\n                                    </InputGroup>\r\n                                    {vital.temperature > 200 ? (\r\n                                        <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Blood Presure</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            systolic(mmHg)\r\n                                        </InputGroupText >\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"systolic\"\r\n                                            id=\"systolic\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.systolic}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n                                    {vital.systolic > 200 ? (\r\n                                        <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Blood Presure</Label>\r\n\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            diastolic (mmHg)\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"diastolic\"\r\n                                            id=\"diastolic\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.diastolic}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n                                    {vital.diastolic > 200 ? (\r\n                                        <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Body Weight</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            kg\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"bodyWeight\"\r\n                                            id=\"bodyWeight\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.bodyWeight}\r\n                                            className={classes.input}\r\n                                            />\r\n\r\n\r\n                                    </InputGroup>\r\n                                    {vital.bodyWeight > 200 ? (\r\n                                        <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>Height</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            m\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"height\"\r\n                                            id=\"height\"\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={vital.height}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n                                    {vital.height > 3 ? (\r\n                                        <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label className={classes.label}>BMI</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText className={classes.inputGroupText}>\r\n                                            BMI\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"bmi\"\r\n                                            id=\"bmi\"\r\n                                            disabled={true}\r\n                                            onChange={handleInputChangeVitalSignDto}\r\n                                            value={bmi}\r\n                                            className={classes.input}\r\n                                        />\r\n\r\n                                    </InputGroup>\r\n{/*                                    {vital.height > 3 ? (\r\n                                        <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                                    ) : \"\" }*/}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"row\">\r\n                        </div>\r\n                        {saving ? <Spinner /> : \"\"}\r\n                        <br />\r\n\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={handleSubmit}\r\n                            //style={{backgroundColor:\"#014d88\", color:'#fff'}}\r\n                            style={{backgroundColor:`${visitVitalStatus?'green':'#014d88'}`, color:'#fff'}}\r\n                        >\r\n                            {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>{visitVitalStatus?'Update':'Save'}</span>\r\n                            ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>{visitVitalStatus?'Updating...':'Saving...'}</span>\r\n                            )}\r\n                        </MatButton>\r\n                        <Link to={\"/\"} >\r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Link>\r\n\r\n{/*\r\n                        {\" \"}<Button  floated='right'  style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={() => PostPatientService(patientObj)}>Post Patient</Button>\r\n*/}\r\n\r\n\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentVitals;",{"ruleId":"159","severity":1,"message":"160","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":23},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"159","severity":1,"message":"167","line":3,"column":19,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"168","line":11,"column":8,"nodeType":"161","messageId":"162","endLine":11,"endColumn":28},{"ruleId":"159","severity":1,"message":"169","line":52,"column":12,"nodeType":"161","messageId":"162","endLine":52,"endColumn":15},{"ruleId":"159","severity":1,"message":"170","line":52,"column":17,"nodeType":"161","messageId":"162","endLine":52,"endColumn":23},{"ruleId":"159","severity":1,"message":"171","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"172","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":18},{"ruleId":"159","severity":1,"message":"173","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":29},{"ruleId":"159","severity":1,"message":"174","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":14},{"ruleId":"159","severity":1,"message":"175","line":16,"column":8,"nodeType":"161","messageId":"162","endLine":16,"endColumn":14},{"ruleId":"159","severity":1,"message":"176","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":17},{"ruleId":"159","severity":1,"message":"177","line":83,"column":9,"nodeType":"161","messageId":"162","endLine":83,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":89,"column":70,"nodeType":"180","messageId":"181","endLine":89,"endColumn":72},{"ruleId":"178","severity":1,"message":"179","line":94,"column":69,"nodeType":"180","messageId":"181","endLine":94,"endColumn":71},{"ruleId":"182","severity":1,"message":"183","line":123,"column":51,"nodeType":"180","messageId":"184","endLine":123,"endColumn":52},{"ruleId":"159","severity":1,"message":"185","line":5,"column":16,"nodeType":"161","messageId":"162","endLine":5,"endColumn":26},{"ruleId":"159","severity":1,"message":"186","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":21},{"ruleId":"159","severity":1,"message":"187","line":6,"column":23,"nodeType":"161","messageId":"162","endLine":6,"endColumn":38},{"ruleId":"159","severity":1,"message":"188","line":6,"column":40,"nodeType":"161","messageId":"162","endLine":6,"endColumn":50},{"ruleId":"159","severity":1,"message":"189","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":14},{"ruleId":"159","severity":1,"message":"190","line":28,"column":9,"nodeType":"161","messageId":"162","endLine":28,"endColumn":13},{"ruleId":"159","severity":1,"message":"191","line":28,"column":14,"nodeType":"161","messageId":"162","endLine":28,"endColumn":22},{"ruleId":"159","severity":1,"message":"192","line":28,"column":23,"nodeType":"161","messageId":"162","endLine":28,"endColumn":33},{"ruleId":"159","severity":1,"message":"193","line":28,"column":34,"nodeType":"161","messageId":"162","endLine":28,"endColumn":42},{"ruleId":"159","severity":1,"message":"194","line":30,"column":10,"nodeType":"161","messageId":"162","endLine":30,"endColumn":15},{"ruleId":"159","severity":1,"message":"195","line":55,"column":7,"nodeType":"161","messageId":"162","endLine":55,"endColumn":16},{"ruleId":"159","severity":1,"message":"196","line":102,"column":12,"nodeType":"161","messageId":"162","endLine":102,"endColumn":22},{"ruleId":"159","severity":1,"message":"197","line":102,"column":24,"nodeType":"161","messageId":"162","endLine":102,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":155,"column":76,"nodeType":"180","messageId":"181","endLine":155,"endColumn":78},{"ruleId":"198","severity":1,"message":"199","line":171,"column":55,"nodeType":"200","messageId":"201","endLine":171,"endColumn":57},{"ruleId":"198","severity":1,"message":"199","line":171,"column":96,"nodeType":"200","messageId":"201","endLine":171,"endColumn":98},{"ruleId":"159","severity":1,"message":"189","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":14},{"ruleId":"159","severity":1,"message":"202","line":24,"column":11,"nodeType":"161","messageId":"162","endLine":24,"endColumn":15},{"ruleId":"159","severity":1,"message":"203","line":24,"column":16,"nodeType":"161","messageId":"162","endLine":24,"endColumn":24},{"ruleId":"159","severity":1,"message":"186","line":28,"column":10,"nodeType":"161","messageId":"162","endLine":28,"endColumn":21},{"ruleId":"159","severity":1,"message":"190","line":29,"column":9,"nodeType":"161","messageId":"162","endLine":29,"endColumn":13},{"ruleId":"159","severity":1,"message":"191","line":29,"column":14,"nodeType":"161","messageId":"162","endLine":29,"endColumn":22},{"ruleId":"159","severity":1,"message":"192","line":29,"column":23,"nodeType":"161","messageId":"162","endLine":29,"endColumn":33},{"ruleId":"159","severity":1,"message":"193","line":29,"column":34,"nodeType":"161","messageId":"162","endLine":29,"endColumn":42},{"ruleId":"159","severity":1,"message":"194","line":31,"column":10,"nodeType":"161","messageId":"162","endLine":31,"endColumn":15},{"ruleId":"159","severity":1,"message":"174","line":32,"column":8,"nodeType":"161","messageId":"162","endLine":32,"endColumn":14},{"ruleId":"159","severity":1,"message":"175","line":33,"column":8,"nodeType":"161","messageId":"162","endLine":33,"endColumn":14},{"ruleId":"159","severity":1,"message":"176","line":34,"column":8,"nodeType":"161","messageId":"162","endLine":34,"endColumn":17},{"ruleId":"159","severity":1,"message":"195","line":58,"column":7,"nodeType":"161","messageId":"162","endLine":58,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":111,"column":10,"nodeType":"206","endLine":111,"endColumn":12,"suggestions":"207"},{"ruleId":"159","severity":1,"message":"208","line":124,"column":15,"nodeType":"161","messageId":"162","endLine":124,"endColumn":29},{"ruleId":"159","severity":1,"message":"209","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"210","line":2,"column":15,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"211","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":18},{"ruleId":"159","severity":1,"message":"212","line":66,"column":9,"nodeType":"161","messageId":"162","endLine":66,"endColumn":16},{"ruleId":"159","severity":1,"message":"213","line":71,"column":12,"nodeType":"161","messageId":"162","endLine":71,"endColumn":18},{"ruleId":"159","severity":1,"message":"214","line":71,"column":20,"nodeType":"161","messageId":"162","endLine":71,"endColumn":29},{"ruleId":"159","severity":1,"message":"215","line":96,"column":11,"nodeType":"161","messageId":"162","endLine":96,"endColumn":20},{"ruleId":"159","severity":1,"message":"216","line":98,"column":26,"nodeType":"161","messageId":"162","endLine":98,"endColumn":41},{"ruleId":"159","severity":1,"message":"171","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"209","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"210","line":2,"column":15,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"212","line":62,"column":9,"nodeType":"161","messageId":"162","endLine":62,"endColumn":16},{"ruleId":"159","severity":1,"message":"217","line":89,"column":15,"nodeType":"161","messageId":"162","endLine":89,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":96,"column":53,"nodeType":"180","messageId":"181","endLine":96,"endColumn":55},{"ruleId":"159","severity":1,"message":"218","line":11,"column":9,"nodeType":"161","messageId":"162","endLine":11,"endColumn":14},{"ruleId":"159","severity":1,"message":"219","line":25,"column":27,"nodeType":"161","messageId":"162","endLine":25,"endColumn":43},{"ruleId":"159","severity":1,"message":"220","line":31,"column":11,"nodeType":"161","messageId":"162","endLine":31,"endColumn":30},{"ruleId":"159","severity":1,"message":"221","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":28},{"ruleId":"159","severity":1,"message":"197","line":13,"column":24,"nodeType":"161","messageId":"162","endLine":13,"endColumn":37},{"ruleId":"159","severity":1,"message":"222","line":11,"column":9,"nodeType":"161","messageId":"162","endLine":11,"endColumn":15},{"ruleId":"159","severity":1,"message":"196","line":74,"column":11,"nodeType":"161","messageId":"162","endLine":74,"endColumn":21},{"ruleId":"159","severity":1,"message":"223","line":75,"column":12,"nodeType":"161","messageId":"162","endLine":75,"endColumn":23},{"ruleId":"159","severity":1,"message":"212","line":76,"column":9,"nodeType":"161","messageId":"162","endLine":76,"endColumn":16},{"ruleId":"159","severity":1,"message":"224","line":79,"column":12,"nodeType":"161","messageId":"162","endLine":79,"endColumn":25},{"ruleId":"159","severity":1,"message":"225","line":79,"column":27,"nodeType":"161","messageId":"162","endLine":79,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":102,"column":26,"nodeType":"180","messageId":"181","endLine":102,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":102,"column":58,"nodeType":"180","messageId":"181","endLine":102,"endColumn":60},{"ruleId":"178","severity":1,"message":"179","line":103,"column":40,"nodeType":"180","messageId":"181","endLine":103,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":104,"column":40,"nodeType":"180","messageId":"181","endLine":104,"endColumn":42},{"ruleId":"159","severity":1,"message":"217","line":110,"column":11,"nodeType":"161","messageId":"162","endLine":110,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":117,"column":49,"nodeType":"180","messageId":"181","endLine":117,"endColumn":51},{"ruleId":"159","severity":1,"message":"226","line":165,"column":11,"nodeType":"161","messageId":"162","endLine":165,"endColumn":25},{"ruleId":"204","severity":1,"message":"227","line":182,"column":8,"nodeType":"206","endLine":182,"endColumn":10,"suggestions":"228"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'Router' is defined but never used.","'PatientVitalsHistory' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'useEffect' is defined but never used.","'classNames' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'Moment' is defined but never used.","'moment' is defined but never used.","'ButtonMui' is defined but never used.","'CurrentStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'FaUserPlus' is defined but never used.","'MdDashboard' is defined but never used.","'MdDeleteForever' is defined but never used.","'MdModeEdit' is defined but never used.","'Link' is defined but never used.","'Menu' is defined but never used.","'MenuList' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'Label' is defined but never used.","'useStyles' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Card' is defined but never used.","'CardBody' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientsVitalsSigns'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'AddVitalsSigns' is assigned a value but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'CancelIcon' is defined but never used.","'history' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'setPostServices' is assigned a value but never used.","'validate' is assigned a value but never used.","'FaEye' is defined but never used.","'setSelectedIndex' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'CheckedInPatientList' is defined but never used.","'Button' is defined but never used.","'permissions' is assigned a value but never used.","'currentVitals' is assigned a value but never used.","'setCurrentVitals' is assigned a value but never used.","'userPermission' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLatestVitals'. Either include it or remove the dependency array.",["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [patientsVitalsSigns]",{"range":"237","text":"238"},"Update the dependencies array to be: [getLatestVitals]",{"range":"239","text":"240"},[4055,4057],"[patientsVitalsSigns]",[5450,5452],"[getLatestVitals]"]